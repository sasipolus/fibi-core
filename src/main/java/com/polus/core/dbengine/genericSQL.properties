get_module_submodule_code= SELECT T1.MODULE_CODE,0 AS SUB_MODULE_CODE,T1.DESCRIPTION,T1.IS_ACTIVE \
							FROM COEUS_MODULE T1 \
							UNION \
							SELECT T1.MODULE_CODE,T2.SUB_MODULE_CODE,T2.DESCRIPTION,T2.IS_ACTIVE \
							FROM COEUS_MODULE T1 \
							INNER JOIN COEUS_SUB_MODULE T2 ON T1.MODULE_CODE = T2.MODULE_CODE \

get_questionnaire_data=SELECT * FROM OSP$QUESTIONNAIRE_QUESTIONS  WHERE QUESTIONNAIRE_ID = <<QUESTIONNAIRE_ID>> AND QUESTION_ID = <<QUESTION_ID>>

get_questionnaire_answer=SELECT \
						T1.QUESTIONNAIRE_ANSWER_ID,\
						T1.QUESTION_ID,\
						T1.ANSWER_NUMBER, \
						T1.ANSWER,\
						T1.ANSWER_LOOKUP_CODE,\
						T1.EXPLANATION ,\
						T4.QUESTION_NUMBER ,\
						T3.QUESTIONNAIRE_ANSWER_ATT_ID 	AS ATTACHMENT_ID,\
						T2.QUESTIONNAIRE_ANS_HEADER_ID \
						FROM  QUEST_ANSWER T1 \
						INNER JOIN QUEST_ANSWER_HEADER T2 ON T1.QUESTIONNAIRE_ANS_HEADER_ID = T2.QUESTIONNAIRE_ANS_HEADER_ID \
						INNER JOIN QUEST_QUESTION T4 ON T1.QUESTION_ID = T4.QUESTION_ID \
						LEFT OUTER JOIN QUEST_ANSWER_ATTACHMENT T3 ON T3.QUESTIONNAIRE_ANSWER_ID = T1.QUESTIONNAIRE_ANSWER_ID \
						WHERE T2.QUESTIONNAIRE_ANS_HEADER_ID = <<AV_QNR_ANS_HEADER_ID>> \
						ORDER BY T1.QUESTIONNAIRE_ANSWER_ID,T1.QUESTION_ID 
	
get_questionnaire_question=  SELECT QUESTION_ID, QUESTION, DESCRIPTION, HELP_LINK, ANSWER_TYPE, ANSWER_LENGTH, NO_OF_ANSWERS, LOOKUP_TYPE,\
							 LOOKUP_NAME, LOOKUP_FIELD, GROUP_NAME,GROUP_LABEL, HAS_CONDITION \
							 FROM   MITKC_QUESTIONNAIRE_QUESTION  WHERE  QUESTIONNAIRE_ID = <<AV_QUESTIONNAIRE_ID>>    ORDER  BY SORT_ORDER 

get_questionnaire_question_answer=SELECT T1.QUESTIONNAIRE_ANSWER_ID, \
								 T1.QUESTION_ID, \
								 T1.ANSWER_NUMBER, \
								 T1.ANSWER, \
								 T1.ANSWER_LOOKUP_CODE, \
								 T1.EXPLANATION ,\
								 T3.QUESTIONNAIRE_ANSWER_ATT_ID AS ATTACHMENT_ID,\
								 T2.QUESTIONNAIRE_ANS_HEADER_ID \
								 FROM  MITKC_QUESTIONNAIRE_ANSWER T1 \
								 INNER JOIN MITKC_QUESTIONNAIRE_ANS_HEADER T2 ON T1.QUESTIONNAIRE_ANS_HEADER_ID = T2.QUESTIONNAIRE_ANS_HEADER_ID \
								 LEFT OUTER JOIN MITKC_QUESTIONNAIRE_ANSWER_ATT T3 ON T3.QUESTIONNAIRE_ANSWER_ID=T1.QUESTIONNAIRE_ANSWER_ID \
								 WHERE T2.MODULE_ITEM_ID = <<AV_MODULE_ITEM_ID>>  \
								 AND T2.MODULE_ITEM_CODE = <<AV_MODULE_CODE>> \
								 ORDER BY T1.QUESTIONNAIRE_ANSWER_ID,T1.QUESTION_ID

insert_questionnaire_answer=INSERT INTO QUEST_ANSWER \
							 (QUESTIONNAIRE_ANSWER_ID,   \
							  QUESTIONNAIRE_ANS_HEADER_ID,  \
							  QUESTION_ID,  \
							 ANSWER_NUMBER,  \
							 ANSWER,  \
							 ANSWER_LOOKUP_CODE,  \
							 EXPLANATION,  \
							 UPDATE_TIMESTAMP,  \
							 UPDATE_USER)  \
							 VALUES   ( \
							  <<QUESTIONNAIRE_ANSWER_ID>>,  \
							 <<QUESTIONNAIRE_ANS_HEADER_ID>>,  \
							  <<QUESTION_ID>>,  \
							  <<ANSWER_NUMBER>>,  \
							  <<ANSWER>>,  \
							  <<ANSWER_LOOKUP_CODE>>, \
							  <<EXPLANATION>>, \
							  <<UPDATE_TIMESTAMP>>,  \
							  <<UPDATE_USER>>)  

insert_questionnaire_attachment_answer=INSERT INTO QUEST_ANSWER_ATTACHMENT \
										(QUESTIONNAIRE_ANSWER_ID,	\
										 ATTACHMENT,	\
										 FILE_NAME,	\
										 CONTENT_TYPE,	\
										 UPDATE_TIMESTAMP,	\
										 UPDATE_USER)	\
										  VALUES   ( \
											<<QUESTIONNAIRE_ANSWER_ID>>,  \
											<<ATTACHMENT>>,  \
											<<FILE_NAME>>,  \
											<<CONTENT_TYPE>>,  \
											<<UPDATE_TIMESTAMP>>,  \
											<<UPDATE_USER>>)

delete_questionnaire_answer=DELETE FROM QUEST_ANSWER WHERE QUESTION_ID = <<QUESTION_ID>> AND QUESTIONNAIRE_ANS_HEADER_ID = <<QUESTIONNAIRE_ANS_HEADER_ID>>

update_questionnaire_answer= UPDATE  QUEST_ANSWER \
							SET  ANSWER = <<ANSWER>>,  \
							ANSWER_LOOKUP_CODE = <<ANSWER_LOOKUP_CODE>>,  \
							EXPLANATION = <<EXPLANATION>>,  \
							UPDATE_TIMESTAMP = <<UPDATE_TIMESTAMP>>,  \
							UPDATE_USER = <<UPDATE_USER>>  \
							WHERE QUESTION_ID = <<QUESTION_ID>> \
							AND ANSWER_NUMBER = <<ANSWER_NUMBER>> \
							AND QUESTIONNAIRE_ANS_HEADER_ID = <<QUESTIONNAIRE_ANS_HEADER_ID>>

update_questionnaire_complete_flag=UPDATE QUEST_ANSWER_HEADER SET QUESTIONNAIRE_COMPLETED_FLAG = <<QUESTIONNAIRE_COMPLETED_FLAG>>, \
                                UPDATE_TIMESTAMP = <<UPDATE_TIMESTAMP>>, UPDATE_USER = <<UPDATE_USER>>  \
                                WHERE QUESTIONNAIRE_ANS_HEADER_ID = <<QUESTIONNAIRE_ANS_HEADER_ID>>  
                                
get_questionnaire_ans_header_id=SELECT QUESTIONNAIRE_ANS_HEADER_ID  FROM   MITKC_QUESTIONNAIRE_ANS_HEADER \
								WHERE  MODULE_ITEM_ID = <<MODULE_ITEM_ID>> \
								AND MODULE_ITEM_CODE = <<MODULE_ITEM_CODE>> \
								AND QUESTIONNAIRE_ID = <<QUESTIONNAIRE_ID>> \

insert_questionnaire_ans_header=INSERT INTO QUEST_ANSWER_HEADER \
								(QUESTIONNAIRE_ANS_HEADER_ID, \
								QUESTIONNAIRE_ID,\
								MODULE_ITEM_CODE,\
								MODULE_SUB_ITEM_CODE,\
								MODULE_ITEM_KEY,\
								MODULE_SUB_ITEM_KEY,\
								QUESTIONNAIRE_COMPLETED_FLAG,\
								UPDATE_TIMESTAMP,\
								UPDATE_USER) \
								VALUES (<<QUESTIONNAIRE_ANS_HEADER_ID>>,\
								<<QUESTIONNAIRE_ID>>,\
								<<MODULE_ITEM_CODE>>,\
								<<MODULE_SUB_ITEM_CODE>>,\
								<<MODULE_ITEM_KEY>>,\
								<<MODULE_SUB_ITEM_KEY>>,\
								<<QUESTIONNAIRE_COMPLETED_FLAG>>,\
								<<UPDATE_TIMESTAMP>>,\
								<<UPDATE_USER>>)

get_max_questionnaire_ans_header_id=SELECT MAX(QUESTIONNAIRE_ANS_HEADER_ID) AS QUESTIONNAIRE_ANS_HEADER_ID  FROM MITKC_QUESTIONNAIRE_ANS_HEADER 

get_applicable_questionnaire = SELECT T2.QUESTIONNAIRE_ID, \
							   T2.QUESTIONNAIRE_NUMBER, \
							   T2.VERSION_NUMBER, \
							   T2.QUESTIONNAIRE, \
							   T3.QUESTIONNAIRE_ANS_HEADER_ID, \
							   T3.QUESTIONNAIRE_COMPLETED_FLAG, \
							   T3.MODULE_SUB_ITEM_KEY, \
							   T1.IS_MANDATORY , \
							   T1.MODULE_ITEM_CODE, \
                               T1.MODULE_SUB_ITEM_CODE, \
                               T1.QUESTIONNAIRE_LABEL, \
                               T4.FULL_NAME, \
                               T2.IS_FINAL, \
							   T3.UPDATE_TIMESTAMP, \
							   T1.RULE_ID FROM QUEST_USAGE T1  \
							   INNER JOIN QUEST_HEADER T2 ON T1.QUESTIONNAIRE_ID = T2.QUESTIONNAIRE_ID  \
							   LEFT OUTER JOIN QUEST_ANSWER_HEADER T3 ON T1.QUESTIONNAIRE_ID = T3.QUESTIONNAIRE_ID  \
							          AND T1.MODULE_ITEM_CODE = T3.MODULE_ITEM_CODE \
							          AND T3.MODULE_ITEM_KEY = <<MODULE_ITEM_KEY>> \
							          AND T3.MODULE_SUB_ITEM_KEY = <<MODULE_SUB_ITEM_KEY>> \
							   LEFT OUTER JOIN PERSON T4 ON T4.USER_NAME = T3.UPDATE_USER \
							   WHERE T1.MODULE_SUB_ITEM_CODE = <<MODULE_SUB_ITEM_CODE>> \
							   AND T1.MODULE_ITEM_CODE = <<MODULE_ITEM_CODE>> \
							   AND T2.IS_FINAL = 'Y' ORDER BY T1.SORT_ORDER ASC

get_answered_questionnaires = SELECT T2.QUESTIONNAIRE_ID, \
							  T2.QUESTIONNAIRE_NUMBER, \
							  T2.VERSION_NUMBER, \
							  T2.QUESTIONNAIRE, \
							  T3.QUESTIONNAIRE_ANS_HEADER_ID, \
							  T3.QUESTIONNAIRE_COMPLETED_FLAG, \
							  T3.MODULE_SUB_ITEM_KEY, \
							  T1.IS_MANDATORY, \
							  T1.MODULE_ITEM_CODE, \
                              T1.MODULE_SUB_ITEM_CODE, \
                              T1.QUESTIONNAIRE_LABEL, \
                              T4.FULL_NAME, \
                              T2.IS_FINAL,\
							  T3.UPDATE_TIMESTAMP, \
							  T1.RULE_ID FROM QUEST_USAGE T1  \
							  INNER JOIN QUEST_HEADER T2 ON T1.QUESTIONNAIRE_ID = T2.QUESTIONNAIRE_ID  \
							  INNER JOIN QUEST_ANSWER_HEADER T3 ON T1.QUESTIONNAIRE_ID = T3.QUESTIONNAIRE_ID  \
							  AND T1.MODULE_ITEM_CODE = T3.MODULE_ITEM_CODE \
							  AND T3.MODULE_ITEM_KEY = <<MODULE_ITEM_KEY>> \
							  AND T3.MODULE_SUB_ITEM_KEY = <<MODULE_SUB_ITEM_KEY>> \
							  AND T1.MODULE_SUB_ITEM_CODE = <<MODULE_SUB_ITEM_CODE>> \
						      LEFT OUTER JOIN PERSON T4 ON T4.USER_NAME = T3.UPDATE_USER \
							  WHERE T3.QUESTIONNAIRE_ID IN (SELECT MAX(S.QUESTIONNAIRE_ID) FROM QUEST_ANSWER_HEADER S \
							  INNER JOIN QUEST_HEADER T4 ON S.QUESTIONNAIRE_ID = T4.QUESTIONNAIRE_ID \
                              WHERE S.MODULE_ITEM_KEY = <<MODULE_ITEM_KEY>> AND T3.MODULE_SUB_ITEM_KEY = <<MODULE_SUB_ITEM_KEY>> \
                              AND T4.QUESTIONNAIRE_NUMBER = T2.QUESTIONNAIRE_NUMBER) \
							  ORDER BY T1.SORT_ORDER ASC

get_active_answered_questionnaire= SELECT T2.QUESTIONNAIRE_ID, \
								T2.QUESTIONNAIRE_NUMBER, \
								T2.VERSION_NUMBER, \
								T2.QUESTIONNAIRE, \
								T3.QUESTIONNAIRE_ANS_HEADER_ID, \
								T3.QUESTIONNAIRE_COMPLETED_FLAG, \
								T3.MODULE_SUB_ITEM_KEY, \
								T1.IS_MANDATORY, \
								T1.MODULE_ITEM_CODE, \
	                            T1.MODULE_SUB_ITEM_CODE, \
	                            T1.QUESTIONNAIRE_LABEL, \
	                            T4.FULL_NAME, \
								T3.UPDATE_TIMESTAMP,\
	                            T2.IS_FINAL,\
								T1.RULE_ID FROM QUEST_USAGE T1  \
								INNER JOIN QUEST_HEADER T2 ON T1.QUESTIONNAIRE_ID = T2.QUESTIONNAIRE_ID  \
								LEFT OUTER JOIN QUEST_ANSWER_HEADER T3 ON T1.QUESTIONNAIRE_ID = T3.QUESTIONNAIRE_ID \
										AND T1.MODULE_ITEM_CODE = T3.MODULE_ITEM_CODE \
								        AND T3.MODULE_ITEM_KEY = <<MODULE_ITEM_KEY>> \
								        AND T3.MODULE_SUB_ITEM_KEY = <<MODULE_SUB_ITEM_KEY>>\
								LEFT OUTER JOIN PERSON T4 ON T4.USER_NAME = T3.UPDATE_USER \
								WHERE T1.MODULE_SUB_ITEM_CODE = <<MODULE_SUB_ITEM_CODE>> \
								AND  T1.MODULE_ITEM_CODE = <<MODULE_ITEM_CODE>> \
								AND (T2.IS_FINAL = 'Y' OR \
	                            ((select count(*) from QUEST_HEADER where QUESTIONNAIRE_NUMBER =T2.QUESTIONNAIRE_NUMBER and IS_FINAL = 'Y') = 0 \
	                            AND (T3.QUESTIONNAIRE_ID IN (SELECT MAX(S.QUESTIONNAIRE_ID) FROM QUEST_ANSWER_HEADER S \
								              INNER JOIN QUEST_HEADER T4 ON S.QUESTIONNAIRE_ID = T4.QUESTIONNAIRE_ID \
	                                          WHERE S.MODULE_ITEM_KEY = <<MODULE_ITEM_KEY>> AND T3.MODULE_SUB_ITEM_KEY = <<MODULE_SUB_ITEM_KEY>> \
	                                          AND T4.QUESTIONNAIRE_NUMBER = T2.QUESTIONNAIRE_NUMBER)))) \
								ORDER BY T1.SORT_ORDER ASC 

get_questionnaire_group = SELECT QUEST_GROUP_TYPE_CODE,	 DESCRIPTION FROM QUEST_GROUP_TYPE

get_questionnaire_header_info=	SELECT t1.QUESTIONNAIRE_ID,\
								t1.QUESTIONNAIRE_NUMBER,\
								t1.VERSION_NUMBER AS QUESTIONNAIRE_VERSION,\
								t1.QUESTIONNAIRE AS QUESTIONNAIRE_NAME,\
								t1.DESCRIPTION AS QUESTIONNAIRE_DESCRIPTION,\
								t1.QUEST_GROUP_TYPE_CODE,\
								t1.IS_FINAL,\
								t1.UPDATE_USER,\
								t3.FULL_NAME as ANS_PERSON_FULL_NAME,\
                                t2.UPDATE_TIMESTAMP as ANS_UPDATE_TIMESTAMP,\
								P.TRIGGER_POST_EVALUATION AS TRIGGER_POST_EVALUATION, \
								t1.UPDATE_TIMESTAMP FROM QUEST_HEADER t1 \
								LEFT JOIN QUEST_USAGE P ON P.QUESTIONNAIRE_ID = t1.QUESTIONNAIRE_ID \
								LEFT JOIN QUEST_ANSWER_HEADER T2 ON T1.QUESTIONNAIRE_ID = T2.QUESTIONNAIRE_ID AND T2.QUESTIONNAIRE_ANS_HEADER_ID = <<AV_QNR_ANS_HEADER_ID>> \
								LEFT JOIN PERSON T3 ON T3.USER_NAME = T2.UPDATE_USER \
								WHERE t1.QUESTIONNAIRE_ID = <<QUESTIONNAIRE_ID>>

get_questionnaire_header_usage=	SELECT 	\
								Q.QUESTIONNAIRE_USAGE_ID, \
								Q.QUESTIONNAIRE_ID, \
								Q.QUESTIONNAIRE_LABEL, \
								Q.MODULE_ITEM_CODE, \
								Q.MODULE_SUB_ITEM_CODE, \
								Q.QUESTIONNAIRE_LABEL, \
								Q.IS_MANDATORY, \
								Q.RULE_ID, \
								Q.SORT_ORDER, \
								B.DESCRIPTION AS RULE \
								FROM QUEST_USAGE Q \
								LEFT OUTER JOIN BUSINESS_RULES  B ON Q.RULE_ID = B.RULE_ID \
								WHERE Q.QUESTIONNAIRE_ID = <<QUESTIONNAIRE_ID>>
								
get_questionnaire_questions =SELECT \
								QUESTION_ID,\
								QUESTION_NUMBER,\
								QUESTION_VERSION_NUMBER,\
								SORT_ORDER,\
								QUESTION,\
								DESCRIPTION,\
								PARENT_QUESTION_ID,\
								HELP_LINK,\
								ANSWER_TYPE,\
								ANSWER_LENGTH,\
								NO_OF_ANSWERS,\
								LOOKUP_TYPE,\
								LOOKUP_NAME,\
								LOOKUP_FIELD,\
								GROUP_NAME,\
								GROUP_LABEL,\
								HAS_CONDITION,\
								UPDATE_USER,\
								UPDATE_TIMESTAMP,\
								RULE_ID\ FROM QUEST_QUESTION WHERE questionnaire_id = <<QUESTIONNAIRE_ID>>	ORDER  BY SORT_ORDER



get_questionnaire_options=SELECT T1.QUESTION_OPTION_ID,  \
									T1.QUESTION_ID,  \
									T1.OPTION_NUMBER,  \
									T1.OPTION_LABEL,  \
									T1.REQUIRE_EXPLANATION,  \
									T1.EXPLANTION_LABEL  \
									FROM   QUEST_QUESTION_OPTION T1  \
									INNER  JOIN QUEST_QUESTION T2 ON T1.QUESTION_ID = T2.QUESTION_ID  \
									WHERE  T2.QUESTIONNAIRE_ID = <<AV_QUESTIONNAIRE_ID>> \
									ORDER  BY T1.QUESTION_OPTION_ID,T1.QUESTION_ID,T1.OPTION_NUMBER 

								
get_questionnaire_conditions=SELECT T1.QUESTION_CONDITION_ID,  \
									T1.QUESTION_ID,  \
									T1.CONDITION_TYPE,  \
									T1.CONDITION_VALUE,  \
									T1.GROUP_NAME, \
									T1.UPDATE_USER  \
									FROM   QUEST_QUESTION_CONDITION T1  \
									INNER  JOIN QUEST_QUESTION T2 ON T1.QUESTION_ID = T2.QUESTION_ID  \
									WHERE  T2.QUESTIONNAIRE_ID = <<AV_QUESTIONNAIRE_ID>> \
									ORDER  BY T1.QUESTION_CONDITION_ID,T1.QUESTION_ID
																	
get_max_questionnaire_id=SELECT QUESTIONNAIRE_ID FROM QUEST_COLUMN_NEXTVALUE

update_max_questionnaire_id=UPDATE QUEST_COLUMN_NEXTVALUE SET QUESTIONNAIRE_ID = <<QUESTIONNAIRE_ID>>

get_max_questionnaire_number=SELECT QUESTIONNAIRE_NUMBER FROM QUEST_COLUMN_NEXTVALUE

update_max_questionnaire_number=UPDATE QUEST_COLUMN_NEXTVALUE SET QUESTIONNAIRE_NUMBER = <<QUESTIONNAIRE_NUMBER>>

update_max_questionnaire_version_number=SELECT MAX(VERSION_NUMBER) MAX_VERSION_NUMBER FROM QUEST_HEADER WHERE QUESTIONNAIRE_NUMBER = <<QUESTIONNAIRE_NUMBER>>



get_max_question_id=SELECT QUESTION_ID FROM QUEST_COLUMN_NEXTVALUE

update_max_question_id=UPDATE QUEST_COLUMN_NEXTVALUE SET QUESTION_ID = <<QUESTION_ID>>


get_max_question_number=SELECT QUESTION_NUMBER FROM QUEST_COLUMN_NEXTVALUE

update_max_question_number=UPDATE QUEST_COLUMN_NEXTVALUE SET QUESTION_NUMBER = <<QUESTION_NUMBER>>



get_max_question_condition_id=SELECT QUESTION_CONDITION_ID FROM QUEST_COLUMN_NEXTVALUE

update_max_question_condition_id=UPDATE QUEST_COLUMN_NEXTVALUE SET QUESTION_CONDITION_ID = <<QUESTION_CONDITION_ID>>

get_max_question_option_id=SELECT QUESTION_OPTION_ID FROM QUEST_COLUMN_NEXTVALUE

update_max_question_option_id=UPDATE QUEST_COLUMN_NEXTVALUE SET QUESTION_OPTION_ID = <<QUESTION_OPTION_ID>>

get_max_questionnaire_ans_header_id=SELECT QUESTIONNAIRE_ANS_HEADER_ID FROM QUEST_COLUMN_NEXTVALUE

update_max_questionnaire_ans_header_id=UPDATE QUEST_COLUMN_NEXTVALUE SET QUESTIONNAIRE_ANS_HEADER_ID = <<QUESTIONNAIRE_ANS_HEADER_ID>>

get_max_questionnaire_answer_id=SELECT QUESTIONNAIRE_ANSWER_ID FROM QUEST_COLUMN_NEXTVALUE

update_max_questionnaire_answer_id=UPDATE QUEST_COLUMN_NEXTVALUE SET QUESTIONNAIRE_ANSWER_ID = <<QUESTIONNAIRE_ANSWER_ID>>

get_max_questionnaire_answer_att_id=SELECT QUESTIONNAIRE_ANSWER_ATT_ID FROM QUEST_COLUMN_NEXTVALUE

update_max_questionnaire_answer_att_id=UPDATE QUEST_COLUMN_NEXTVALUE SET QUESTIONNAIRE_ANSWER_ATT_ID = <<QUESTIONNAIRE_ANSWER_ATT_ID>>

get_max_questionnaire_usage_id=SELECT QUESTIONNAIRE_USAGE_ID FROM QUEST_COLUMN_NEXTVALUE

update_max_questionnaire_usage_id=UPDATE QUEST_COLUMN_NEXTVALUE SET QUESTIONNAIRE_USAGE_ID = <<QUESTIONNAIRE_USAGE_ID>>	



insert_questionnaire_header=INSERT INTO QUEST_HEADER(\
								QUESTIONNAIRE_ID,\
								QUESTIONNAIRE_NUMBER,\
								VERSION_NUMBER,\
								QUESTIONNAIRE,\
								DESCRIPTION,\
								UPDATE_TIMESTAMP,\
								UPDATE_USER,\
								QUEST_GROUP_TYPE_CODE,\
								IS_FINAL\
								)\
								VALUES(\
								<<QUESTIONNAIRE_ID>>,\
								<<QUESTIONNAIRE_NUMBER>>,\
								<<VERSION_NUMBER>>,\
								<<QUESTIONNAIRE>>,\
								<<DESCRIPTION>>,\
								<<UPDATE_TIMESTAMP>>,\
								<<UPDATE_USER>>,\
								<<QUEST_GROUP_TYPE_CODE>>,\
								<<IS_FINAL>>\
								)
update_questionnaire_header=UPDATE QUEST_HEADER SET QUESTIONNAIRE = <<QUESTIONNAIRE>>,\
							DESCRIPTION = <<DESCRIPTION>>,\
							UPDATE_TIMESTAMP = <<UPDATE_TIMESTAMP>>,\
							UPDATE_USER = <<UPDATE_TIMESTAMP>>,\
							QUEST_GROUP_TYPE_CODE = <<QUEST_GROUP_TYPE_CODE>>,\
							IS_FINAL = <<IS_FINAL>> \
							WHERE QUESTIONNAIRE_ID = <<QUESTIONNAIRE_ID>>
							
insert_question=INSERT INTO QUEST_QUESTION(\
					QUESTION_ID,\
					QUESTION_NUMBER,\
					QUESTION_VERSION_NUMBER,\
					QUESTIONNAIRE_ID,\
					SORT_ORDER,\
					QUESTION,\
					DESCRIPTION,\
					PARENT_QUESTION_ID,\
					HELP_LINK,\
					ANSWER_TYPE,\
					ANSWER_LENGTH,\
					NO_OF_ANSWERS,\
					LOOKUP_TYPE,\
					LOOKUP_NAME,\
					LOOKUP_FIELD,\
					GROUP_NAME,\
					GROUP_LABEL,\
					HAS_CONDITION,\
					UPDATE_TIMESTAMP,\
					UPDATE_USER,\
					RULE_ID\
					)\
					VALUES(\
					<<QUESTION_ID>>,\
					<<QUESTION_NUMBER>>,\
					<<QUESTION_VERSION_NUMBER>>,\
					<<QUESTIONNAIRE_ID>>,\
					<<SORT_ORDER>>,\
					<<QUESTION>>,\
					<<DESCRIPTION>>,\
					<<PARENT_QUESTION_ID>>,\
					<<HELP_LINK>>,\
					<<ANSWER_TYPE>>,\
					<<ANSWER_LENGTH>>,\
					<<NO_OF_ANSWERS>>,\
					<<LOOKUP_TYPE>>,\
					<<LOOKUP_NAME>>,\
					<<LOOKUP_FIELD>>,\
					<<GROUP_NAME>>,\
					<<GROUP_LABEL>>,\
					<<HAS_CONDITION>>,\
					<<UPDATE_TIMESTAMP>>,\
					<<UPDATE_USER>>,\
					<<RULE_ID>>\
					)						
update_question=UPDATE QUEST_QUESTION SET QUESTION = <<QUESTION>>, \
				DESCRIPTION = <<DESCRIPTION>>,\
				PARENT_QUESTION_ID = <<PARENT_QUESTION_ID>>,\
				HELP_LINK = <<HELP_LINK>>,\
				ANSWER_TYPE = <<ANSWER_TYPE>>,\
				ANSWER_LENGTH = <<ANSWER_LENGTH>>,\
				NO_OF_ANSWERS = <<NO_OF_ANSWERS>>,\
				LOOKUP_TYPE = <<LOOKUP_TYPE>>,\
				LOOKUP_NAME = <<LOOKUP_NAME>>,\
				LOOKUP_FIELD = <<LOOKUP_FIELD>>,\
				GROUP_NAME = <<GROUP_NAME>>,\
				GROUP_LABEL = <<GROUP_LABEL>>,\
				HAS_CONDITION = <<HAS_CONDITION>>,\
				UPDATE_TIMESTAMP = <<UPDATE_TIMESTAMP>>,\
				UPDATE_USER = <<UPDATE_USER>>, \
				SORT_ORDER = <<SORT_ORDER>>, \
				RULE_ID = <<RULE_ID>> \
				WHERE QUESTION_ID = <<QUESTION_ID>>
				
insert_question_condition=INSERT INTO QUEST_QUESTION_CONDITION(\
							QUESTION_CONDITION_ID,\
							QUESTION_ID,\
							CONDITION_TYPE,\
							CONDITION_VALUE,\
							GROUP_NAME,\
							UPDATE_TIMESTAMP,\
							UPDATE_USER\
							)\
							VALUES(\
							<<QUESTION_CONDITION_ID>>,\
							<<QUESTION_ID>>,\
							<<CONDITION_TYPE>>,\
							<<CONDITION_VALUE>>,\
							<<GROUP_NAME>>,\
							<<UPDATE_TIMESTAMP>>,\
							<<UPDATE_USER>>\
							)
									
update_question_condition=UPDATE QUEST_QUESTION_CONDITION SET CONDITION_TYPE = <<CONDITION_TYPE>>,\
								CONDITION_VALUE = <<CONDITION_VALUE>>,\
								GROUP_NAME = <<GROUP_NAME>>,\
								UPDATE_TIMESTAMP = <<UPDATE_TIMESTAMP>>,\
								UPDATE_USER = <<UPDATE_USER>> \
							WHERE QUESTION_CONDITION_ID = <<QUESTION_CONDITION_ID>>		
							
insert_question_option=INSERT INTO QUEST_QUESTION_OPTION(\
						QUESTION_OPTION_ID,\
						QUESTION_ID,\
						OPTION_NUMBER,\
						OPTION_LABEL,\
						REQUIRE_EXPLANATION,\
						EXPLANTION_LABEL,\
						UPDATE_TIMESTAMP,\
						UPDATE_USER\
						)\
						VALUES(\
						<<QUESTION_OPTION_ID>>,\
						<<QUESTION_ID>>,\
						<<OPTION_NUMBER>>,\
						<<OPTION_LABEL>>,\
						<<REQUIRE_EXPLANATION>>,\
						<<EXPLANTION_LABEL>>,\
						<<UPDATE_TIMESTAMP>>,\
						<<UPDATE_USER>>\
						)	
												
update_question_option= UPDATE QUEST_QUESTION_OPTION SET OPTION_LABEL = <<OPTION_LABEL>>,\
							REQUIRE_EXPLANATION = <<REQUIRE_EXPLANATION>>, \
							EXPLANTION_LABEL = <<EXPLANTION_LABEL>>, \
							UPDATE_TIMESTAMP = <<UPDATE_TIMESTAMP>>, \
							UPDATE_USER = <<UPDATE_USER>> \
						WHERE QUESTION_OPTION_ID = <<QUESTION_OPTION_ID>>
delete_questionnaire_question= DELETE FROM QUEST_QUESTION  WHERE QUESTION_ID = <<QUESTION_ID>>
delete_question_condition= DELETE FROM QUEST_QUESTION_CONDITION  WHERE QUESTION_ID = <<QUESTION_ID>>
delete_question_option= DELETE FROM QUEST_QUESTION_OPTION  WHERE QUESTION_ID = <<QUESTION_ID>>

delete_condition=DELETE FROM QUEST_QUESTION_CONDITION  WHERE QUESTION_CONDITION_ID = <<QUESTION_CONDITION_ID>>
delete_option=DELETE FROM QUEST_QUESTION_OPTION  WHERE QUESTION_OPTION_ID = <<QUESTION_OPTION_ID>>

insert_questionnaire_usage = INSERT INTO QUEST_USAGE(\
								QUESTIONNAIRE_USAGE_ID,\
								MODULE_ITEM_CODE,\
								MODULE_SUB_ITEM_CODE,\
								QUESTIONNAIRE_ID,\
								QUESTIONNAIRE_LABEL,\
								IS_MANDATORY,\
								RULE_ID,\
								UPDATE_TIMESTAMP,\
								UPDATE_USER,\
								SORT_ORDER \
								)\
								VALUES(\
								<<QUESTIONNAIRE_USAGE_ID>>,\
								<<MODULE_ITEM_CODE>>,\
								<<MODULE_SUB_ITEM_CODE>>,\
								<<QUESTIONNAIRE_ID>>,\
								<<QUESTIONNAIRE_LABEL>>,\
								<<IS_MANDATORY>>,\
								<<RULE_ID>>,\
								<<UPDATE_TIMESTAMP>>,\
								<<UPDATE_USER>>,\
								<<SORT_ORDER>> \
								)
update_questionnaire_usage =UPDATE QUEST_USAGE SET MODULE_ITEM_CODE = <<MODULE_ITEM_CODE>>,\
							MODULE_SUB_ITEM_CODE = <<MODULE_SUB_ITEM_CODE>>,\
							QUESTIONNAIRE_LABEL = <<QUESTIONNAIRE_LABEL>>,\
							IS_MANDATORY = <<IS_MANDATORY>>,\
							RULE_ID = <<RULE_ID>>,\
							UPDATE_TIMESTAMP = <<UPDATE_TIMESTAMP>>,\
							UPDATE_USER = <<UPDATE_USER>> \
							WHERE QUESTIONNAIRE_USAGE_ID = <<QUESTIONNAIRE_USAGE_ID>>

delete_questionnaire_usage = DELETE FROM QUEST_USAGE WHERE QUESTIONNAIRE_USAGE_ID = <<QUESTIONNAIRE_USAGE_ID>>
get_complete_look_up= SELECT UNIT_NUMBER FROM BUSINESS_RULES
		  
get_questionnaire_attachment = SELECT QUESTIONNAIRE_ANSWER_ATT_ID, \
								QUESTIONNAIRE_ANSWER_ID, \
								ATTACHMENT, \
								FILE_NAME, \
								CONTENT_TYPE FROM QUEST_ANSWER_ATTACHMENT \
								WHERE QUESTIONNAIRE_ANSWER_ATT_ID =	<<AV_QUESTIONNAIRE_ANS_ATTACHMENT_ID>>
								
update_questionnaire_attachment_answer= UPDATE  QUEST_ANSWER_ATTACHMENT \
							SET  ATTACHMENT = <<ATTACHMENT>>,  \
							FILE_NAME = <<FILE_NAME>>,  \
							CONTENT_TYPE = <<CONTENT_TYPE>>,  \
							UPDATE_TIMESTAMP = <<UPDATE_TIMESTAMP>>,  \
							UPDATE_USER = <<UPDATE_USER>>  \
							WHERE QUESTIONNAIRE_ANSWER_ATT_ID = <<QUESTIONNAIRE_ANSWER_ATT_ID>> 	
							
delete_questionnaire_attachment_answer=DELETE FROM QUEST_ANSWER_ATTACHMENT WHERE QUESTIONNAIRE_ANSWER_ATT_ID = <<QUESTIONNAIRE_ANSWER_ATT_ID>>			



#............................................................



get_max_wrklfw_business_rule_id=SELECT RULE_ID FROM WORKFLOW_COLUMN_NEXTVALUE

update_max_wrklfw_business_rule_id=UPDATE WORKFLOW_COLUMN_NEXTVALUE SET RULE_ID = <<RULE_ID>>

get_max_rule_expression_id=SELECT RULES_EXPERSSION_ID FROM WORKFLOW_COLUMN_NEXTVALUE

update_max_rule_expression_id=UPDATE WORKFLOW_COLUMN_NEXTVALUE SET RULES_EXPERSSION_ID = <<RULES_EXPERSSION_ID>>

get_business_rule= SELECT  \
                   T1.RULE_ID ,  \
                   T1.DESCRIPTION ,  \
                   T1.RULE_TYPE,  \
                   T1.RULE_CATEGORY, \
                   T2.UNIT_NAME, \
                   T1.UNIT_NUMBER,  \
                   T3.DESCRIPTION AS MODULE_NAME,  \
                   T1.MODULE_CODE,  \
                   T1.SUB_MODULE_CODE,  \
                   T1.IS_ACTIVE,  \
                   T1.UPDATE_TIMESTAMP,  \
                   T1.UPDATE_USER,  \
                   T1.RULE_EXPRESSION,  \
                   T1.MAP_ID, \
                   T4.MAP_NAME,\
                   T1.NOTIFICATION_ID, \
                   T1.USER_MESSAGE,  \
                   T1.RULE_EVALUATION_ORDER, \
                   IFNULL(T5.DESCRIPTION,T6.DESCRIPTION) AS RULE_APPLIED_TO, \
                   CASE WHEN (SELECT COUNT(1) FROM META_RULE_DETAIL WHERE RULE_ID = T1.RULE_ID) = 0 THEN 'FALSE' ELSE 'TRUE' END as IS_RULE_ADDED \
                   FROM BUSINESS_RULES T1 \
                   LEFT OUTER JOIN UNIT T2 ON T1.UNIT_NUMBER = T2.UNIT_NUMBER \
                   LEFT OUTER JOIN COEUS_MODULE T3 ON T1.MODULE_CODE = T3.MODULE_CODE \
                   LEFT OUTER JOIN WORKFLOW_MAP T4 ON T1.MAP_ID= T4.MAP_ID \
                   LEFT OUTER JOIN COEUS_SUB_MODULE T5 ON T1.MODULE_CODE = T5.MODULE_CODE  \
                   AND T1.SUB_MODULE_CODE = T5.SUB_MODULE_CODE \
                   LEFT OUTER JOIN COEUS_MODULE T6 ON T1.MODULE_CODE = T6.MODULE_CODE \
                   where T1.MODULE_CODE= <<MODULE_CODE>> AND  T1.SUB_MODULE_CODE= <<SUB_MODULE_CODE>> AND  \
                   T1.UNIT_NUMBER= <<UNIT_NUMBER>> AND  T1.RULE_TYPE= <<RULE_TYPE>>  AND \
                   (IF(<<SHOW_ACTIVE>> = 'Y', T1.IS_ACTIVE = 'Y', (IF(<<SHOW_ACTIVE>> = 'N', T1.IS_ACTIVE = 'N', T1.IS_ACTIVE IN ('Y','N')))))

get_notifications = 	SELECT NOTIFICATION_TYPE_ID,\
						MODULE_CODE,\
						SUB_MODULE_CODE,\
						DESCRIPTION,\
						SUBJECT,\
						MESSAGE,\
						PROMPT_USER,\
						IS_ACTIVE,\
						CREATE_USER,\
						CREATE_TIMESTAMP,\
						UPDATE_USER,\
						UPDATE_TIMESTAMP FROM NOTIFICATION_TYPE ORDER BY DESCRIPTION

insert_business_rule=	INSERT INTO BUSINESS_RULES( \
						RULE_ID, \
						DESCRIPTION, \
						RULE_TYPE, \
						RULE_CATEGORY, \
						UNIT_NUMBER, \
						MODULE_CODE, \
						SUB_MODULE_CODE, \
						UPDATE_TIMESTAMP, \
						UPDATE_USER, \
						IS_ACTIVE, \
						RULE_EXPRESSION, \
						MAP_ID, \
						NOTIFICATION_ID, \
						USER_MESSAGE, \
						RULE_EVALUATION_ORDER \
						) \
						VALUES( \
						<<RULE_ID>>, \
						<<DESCRIPTION>>, \
						<<RULE_TYPE>>,\
						<<RULE_CATEGORY>>,\
						<<UNIT_NUMBER>>, \
						<<MODULE_CODE>>, \
						<<SUB_MODULE_CODE>>, \
						<<UPDATE_TIMESTAMP>>, \
						<<UPDATE_USER>>, \
						<<IS_ACTIVE>>, \
						<<RULE_EXPRESSION>>, \
						<<MAP_ID>>, \
						<<NOTIFICATION_ID>>, \
						<<USER_MESSAGE>>, \
						<<RULE_EVALUATION_ORDER>> \
						)

get_max_wrklfw_business_rule_order_id =  SELECT MAX(RULE_EVALUATION_ORDER) AS ID \
				         FROM BUSINESS_RULES \
                  			 WHERE SUB_MODULE_CODE = <<SUB_MODULE_CODE>> \
                  			 AND UNIT_NUMBER = <<UNIT_NUMBER>> \
                  			 AND MODULE_CODE = <<MODULE_CODE>> \
                  			 AND RULE_TYPE = <<RULE_TYPE>>	
                  						 
insert_business_rule_expression = INSERT INTO BUSINESS_RULES_EXPERSSION( \
                                  RULES_EXPERSSION_ID, \
                                  RULE_ID, \
                                  EXPRESSION_NUMBER, \
                                  EXPRESSION_TYPE_CODE, \
                                  LVALUE, \
                                  CONDITION_OPERATOR, \
                                  RVALUE, \
                                  UPDATE_TIMESTAMP, \
                                  UPDATE_USER,\
                                  PARENT_EXPRESSION_NUMBER \
                                  ) \
                                  VALUES( \
                                  <<RULES_EXPERSSION_ID>>, \
                                  <<RULE_ID>>, \
                                  <<EXPRESSION_NUMBER>>, \
                                  <<EXPRESSION_TYPE_CODE>>, \
                                  <<LVALUE>>, \
                                  <<CONDITION_OPERATOR>>, \
                                  <<RVALUE>>, \
                                  <<UPDATE_TIMESTAMP>>, \
                                  <<UPDATE_USER>>,\
                                  <<PARENT_EXPRESSION_NUMBER>>\
                                  )	

update_business_rule =	UPDATE BUSINESS_RULES SET DESCRIPTION = <<DESCRIPTION>>,\
						RULE_TYPE = <<RULE_TYPE>>,\
						RULE_CATEGORY = <<RULE_CATEGORY>>, \
						UNIT_NUMBER = <<UNIT_NUMBER>>, \
						MODULE_CODE = <<MODULE_CODE>>, \
						SUB_MODULE_CODE = <<SUB_MODULE_CODE>>, \
						UPDATE_TIMESTAMP = <<UPDATE_TIMESTAMP>>, \
						UPDATE_USER = <<UPDATE_USER>>, \
						IS_ACTIVE = <<IS_ACTIVE>>,\
						RULE_EXPRESSION = <<RULE_EXPRESSION>>, \
						MAP_ID = <<MAP_ID>>, \
						NOTIFICATION_ID = <<NOTIFICATION_ID>>, \
						USER_MESSAGE = <<USER_MESSAGE>>, \
						RULE_EVALUATION_ORDER = <<RULE_EVALUATION_ORDER>> \
						WHERE RULE_ID = <<RULE_ID>>

update_business_rule_expression =  UPDATE BUSINESS_RULES_EXPERSSION SET EXPRESSION_NUMBER = <<EXPRESSION_NUMBER>>, \
			  					   EXPRESSION_TYPE_CODE = <<EXPRESSION_TYPE_CODE>>,\
								   LVALUE = <<LVALUE>>, \
								   CONDITION_OPERATOR = <<CONDITION_OPERATOR>>, \
								   RVALUE = <<RVALUE>>,\
								   UPDATE_TIMESTAMP = <<UPDATE_TIMESTAMP>>, \
								   UPDATE_USER = <<UPDATE_USER>> ,\
								   PARENT_EXPRESSION_NUMBER = <<PARENT_EXPRESSION_NUMBER>> \
								   WHERE RULES_EXPERSSION_ID = <<RULES_EXPERSSION_ID>> AND RULE_ID = <<RULE_ID>>	

inactivate_business_rule = UPDATE BUSINESS_RULES SET IS_ACTIVE = <<IS_ACTIVE>>, \
						UPDATE_TIMESTAMP = <<UPDATE_TIMESTAMP>>, \
						UPDATE_USER = <<UPDATE_USER>> \
						WHERE RULE_ID = <<RULE_ID>>

get_rule_variable_details = SELECT VARIABLE_NAME,\
			    MODULE_CODE,\
			    SUB_MODULE_CODE,\
			    DESCRIPTION,\
			    TABLE_NAME,\
			    COLUMN_NAME,\
			    SHOW_LOOKUP,\
			    UPDATE_TIMESTAMP,\
			    UPDATE_USER,\
			    LOOKUP_WINDOW_NAME FROM BUSINESS_RULE_VARIABLE \
			    WHERE MODULE_CODE = <<MODULE_ITEM_CODE>>

get_rule_function_details = SELECT FUNCTION_NAME,\
			    MODULE_CODE,\
			    SUB_MODULE_CODE,\
			    DESCRIPTION,\
			    DB_FUNCTION_NAME,\
			    UPDATE_TIMESTAMP,\
			    UPDATE_USER FROM BUSINESS_RULE_FUNCTION	\
			    WHERE MODULE_CODE = <<MODULE_ITEM_CODE>> AND SUB_MODULE_CODE = <<MODULE_SUB_ITEM_CODE>>	

get_rule_question_details =  SELECT distinct T1.QUESTION_ID,\
								     T1.QUESTION_NUMBER,\
								     T1.QUESTION_VERSION_NUMBER,\
								     T1.QUESTIONNAIRE_ID,\
								     T1.SORT_ORDER,\
								     T1.QUESTION,\
								     T1.DESCRIPTION,\
								     T1.PARENT_QUESTION_ID,\
								     T1.HELP_LINK,\
								     T1.ANSWER_TYPE,\
								     T1.ANSWER_LENGTH,\
								     T1.NO_OF_ANSWERS,\
								     T1.LOOKUP_TYPE,\
								     T1.LOOKUP_NAME,\
								     T1.LOOKUP_FIELD,\
								     T1.GROUP_NAME,\
								     T1.GROUP_LABEL,\
								     T1.HAS_CONDITION,\
								     T1.UPDATE_TIMESTAMP,\
								     T1.UPDATE_USER,\
								     CONCAT(T3.QUESTIONNAIRE_NUMBER, ' ', T3.QUESTIONNAIRE) AS QUESTIONNAIRE, \
								     T2.QUESTIONNAIRE_LABEL||'-'||T1.QUESTION AS QUESTION_VALUE FROM QUEST_QUESTION T1 \
								     INNER JOIN QUEST_USAGE T2 ON T1.QUESTIONNAIRE_ID = T2.QUESTIONNAIRE_ID \
								     INNER JOIN QUEST_HEADER T3 ON T1.QUESTIONNAIRE_ID = T3.QUESTIONNAIRE_ID AND T3.IS_FINAL = 'Y'\
								     WHERE T2.MODULE_ITEM_CODE = <<MODULE_ITEM_CODE>> AND ANSWER_TYPE NOT IN ('Attachment','Table')	

get_rule_by_id=    SELECT \
                   T1.DESCRIPTION , \
                   T1.RULE_TYPE, \
                   T1.RULE_CATEGORY, \
                   T2.UNIT_NAME, \
                   T1.UNIT_NUMBER, \
                   T3.DESCRIPTION AS MODULE_NAME, \
                   T1.MODULE_CODE, \
                   T1.SUB_MODULE_CODE, \
                   T1.IS_ACTIVE, \
                   T1.UPDATE_TIMESTAMP, \
                   T1.UPDATE_USER, \
                   T1.RULE_EXPRESSION, \
                   T1.MAP_ID, \
	               T4.DESCRIPTION AS MAP_DESCRIPTION ,\
		           T1.NOTIFICATION_ID, \
		           T5.DESCRIPTION AS NOTIFICATION_DESCRIPTION, \
	               T1.USER_MESSAGE, \
		           T1.RULE_EVALUATION_ORDER, \
		           IFNULL(T6.DESCRIPTION,T3.DESCRIPTION) AS RULE_APPLIED_TO, \
		           CASE WHEN (SELECT COUNT(1) FROM META_RULE_DETAIL M1 \
                   INNER JOIN META_RULES M2 ON  M2.META_RULE_ID=M1.META_RULE_ID WHERE RULE_ID = T1.RULE_ID) = 0 THEN 'FALSE' ELSE 'TRUE' END as IS_RULE_ADDED \
		           FROM BUSINESS_RULES T1 \
                   LEFT OUTER JOIN UNIT T2 ON T1.UNIT_NUMBER = T2.UNIT_NUMBER \
                   INNER JOIN COEUS_MODULE T3 ON T1.MODULE_CODE = T3.MODULE_CODE \
                   LEFT OUTER JOIN COEUS_SUB_MODULE T6 ON T1.MODULE_CODE = T6.MODULE_CODE  \
                   AND T1.SUB_MODULE_CODE = T6.SUB_MODULE_CODE \
                   LEFT OUTER JOIN WORKFLOW_MAP T4 ON T1.MAP_ID = T4.MAP_ID \
                   LEFT OUTER JOIN NOTIFICATION_TYPE T5 ON T1.NOTIFICATION_ID = T5.NOTIFICATION_TYPE_ID \
                   WHERE T1.RULE_ID =<<RULE_ID>> 

get_ruleexpression_by_id= SELECT \
						T1.RULES_EXPERSSION_ID , \
						T1.EXPRESSION_NUMBER , \
						T1.EXPRESSION_TYPE_CODE , \
						T1.LVALUE , \
						T1.CONDITION_OPERATOR , \
						T1.RVALUE , \
						T1.UPDATE_TIMESTAMP , \
						T1.UPDATE_USER ,\
						T1.PARENT_EXPRESSION_NUMBER,\
						IFNULL(T4.QUESTION, (SELECT QUESTION FROM QUEST_QUESTION WHERE QUESTION_ID = (SELECT MAX(QUESTION_ID) \
						FROM QUEST_QUESTION WHERE QUESTION_NUMBER = T1.LVALUE))) AS QUESTION , \
						T5.LOOKUP_WINDOW_NAME \
						FROM BUSINESS_RULES_EXPERSSION T1 \
						LEFT JOIN( select T2.QUESTION,T2.QUESTION_NUMBER FROM QUEST_QUESTION T2 \
						INNER JOIN QUEST_HEADER T3 ON T3.QUESTIONNAIRE_ID = T2.QUESTIONNAIRE_ID AND T3.IS_FINAL = 'Y') \
						AS T4 ON T4.QUESTION_NUMBER = T1.LVALUE \
						LEFT JOIN BUSINESS_RULE_VARIABLE T5 on T5.VARIABLE_NAME = T1.LVALUE \
						WHERE T1.RULE_ID = <<RULE_ID>> 

get_look_up_details =	SELECT \
                        TABLE_NAME, \
						COLUMN_NAME, \
						OTHERS_DISPLAY_COLUMNS \
                        FROM LOOKUP_WINDOW \
                        WHERE LOOKUP_WINDOW_NAME = <<LOOKUP_WINDOW_NAME>> 

get_question_details_by_number = SELECT T1.QUESTION_NUMBER,\
			     T1.QUESTION_VERSION_NUMBER,\
			     T1.QUESTIONNAIRE_ID,\
			     T1.SORT_ORDER,\
			     T1.QUESTION,\
			     T1.DESCRIPTION,\
			     T1.PARENT_QUESTION_ID,\
			     T1.HELP_LINK,\
			     T1.ANSWER_TYPE,\
			     T1.ANSWER_LENGTH,\
			     T1.NO_OF_ANSWERS,\
			     T1.LOOKUP_TYPE,\
			     T1.LOOKUP_NAME,\
			     T1.LOOKUP_FIELD,\
			     T1.GROUP_NAME,\
			     T1.GROUP_LABEL,\
			     T1.HAS_CONDITION,\
			     T1.UPDATE_TIMESTAMP,\
			     T2.QUESTIONNAIRE, \
			     T2.QUESTIONNAIRE_NUMBER, \
			     T1.QUESTION_ID, \
			     T1.UPDATE_USER FROM QUEST_QUESTION T1 \
			     INNER JOIN QUEST_HEADER T2 ON T1.QUESTIONNAIRE_ID = T2.QUESTIONNAIRE_ID AND T2.IS_FINAL = 'Y'\
			     WHERE T1.QUESTION_NUMBER = <<QUESTION_NUMBER>>

get_option_details_by_id = SELECT T1.QUESTION_NUMBER,\
             		   T2.OPTION_LABEL FROM QUEST_QUESTION	T1 \
			   INNER JOIN QUEST_QUESTION_OPTION T2 ON T1.QUESTION_ID = T2.QUESTION_ID \
			   WHERE T1.QUESTION_ID = <<QUESTION_ID>>

delete_rule_expression_by_id = 	DELETE FROM BUSINESS_RULES_EXPERSSION WHERE RULES_EXPERSSION_ID = <<RULES_EXPERSSION_ID>>	

update_rule_order = UPDATE BUSINESS_RULES SET RULE_EVALUATION_ORDER = <<RULE_EVALUATION_ORDER>> \
 		    WHERE  RULE_ID = <<RULE_ID>> 

get_max_wrklfw_map_map_id=SELECT MAP_ID FROM WORKFLOW_COLUMN_NEXTVALUE

update_max_wrklfw_map_map_id=UPDATE WORKFLOW_COLUMN_NEXTVALUE SET MAP_ID = <<MAP_ID>>

get_max_wrklfw_map_detail_map_id=SELECT MAP_DETAIL_ID FROM WORKFLOW_COLUMN_NEXTVALUE

update_max_wrklfw_map_detail_map_id=UPDATE WORKFLOW_COLUMN_NEXTVALUE SET MAP_DETAIL_ID = <<MAP_DETAIL_ID>>

get_workflow_map = SELECT T1.MAP_ID, \
		   T1.DESCRIPTION, \
		   T1.MAP_TYPE, \
	       T1.UNIT_NUMBER, \
		   T2.UNIT_NAME AS UNIT_NAME, \
	       T1.UPDATE_USER, \
	       T1.MAP_NAME, \
	       T3.FULL_NAME AS UPDATE_USER_FULLNAME, \
           GROUP_CONCAT(T5.FULL_NAME) APPROVER_PERSONS, \
           GROUP_CONCAT(T6.DESCRIPTION) APPROVER_ROLES, \
		   T1.UPDATE_TIMESTAMP	FROM WORKFLOW_MAP T1 \
		   LEFT OUTER JOIN UNIT T2 ON T1.UNIT_NUMBER = T2.UNIT_NUMBER \
		   LEFT OUTER JOIN PERSON T3 ON T1.UPDATE_USER = T3.USER_NAME \
           LEFT OUTER JOIN WORKFLOW_MAP_DETAIL T4 ON T4.MAP_ID =T1.MAP_ID \
           LEFT OUTER JOIN PERSON T5 ON T5.PERSON_ID = T4.APPROVER_PERSON_ID \
           LEFT OUTER JOIN PERSON_ROLE_TYPE T6 ON T6.ROLE_TYPE_CODE = T4.ROLE_TYPE_CODE \
           GROUP BY T1.MAP_ID ORDER BY T1.MAP_NAME

get_role_description = SELECT ROLE_TYPE_CODE,DESCRIPTION FROM PERSON_ROLE_TYPE WHERE IS_ACTIVE='Y' ORDER BY DESCRIPTION ASC

get_map_by_id =  SELECT \
                 T1.DESCRIPTION, \
		 T1.MAP_TYPE,\
	       	 T1.UPDATE_USER,\
		 T1.MAP_ID , \
		 T1.UNIT_NUMBER, \
		 T2.UNIT_NAME AS UNIT_NAME, \
		 T1.MAP_NAME,\
		 T1.UPDATE_TIMESTAMP \
                 FROM WORKFLOW_MAP T1 \
                 LEFT OUTER JOIN UNIT T2 ON T1.UNIT_NUMBER = T2.UNIT_NUMBER \
                 WHERE MAP_ID = <<MAP_ID>> 

get_map_details_by_id = SELECT \
                        T1.MAP_DETAIL_ID , \
                        T1.MAP_ID , \
                        T1.APPROVAL_STOP_NUMBER, \
                        T1.APPROVER_NUMBER,  \
                        T1.APPROVER_PERSON_ID, \
                        T1.PRIMARY_APPROVER_FLAG, \
                        T1.IS_ROLE, \
                        T1.ROLE_TYPE_CODE, \
                        T1.DESCRIPTION, \
                        T3.FULL_NAME AS FULL_NAME, \
                        T2.DESCRIPTION AS APPROVER_NAME, \
                        T1.UPDATE_TIMESTAMP, \
                        T1.STOP_NAME, \
                        T1.UPDATE_USER \
                        FROM WORKFLOW_MAP_DETAIL T1 \
                        LEFT OUTER JOIN PERSON_ROLE_TYPE T2 ON T1.ROLE_TYPE_CODE = T2.ROLE_TYPE_CODE \
                        LEFT OUTER JOIN PERSON T3 ON T1.APPROVER_PERSON_ID = T3.PERSON_ID \
                        WHERE MAP_ID = <<MAP_ID>>

delete_map_details = DELETE FROM WORKFLOW_MAP_DETAIL WHERE MAP_ID = <<MAP_ID>>

delete_map= DELETE FROM WORKFLOW_MAP WHERE MAP_ID = <<MAP_ID>>

delete_map_detail_by_id = DELETE FROM WORKFLOW_MAP_DETAIL WHERE MAP_DETAIL_ID = <<MAP_DETAIL_ID>>

insert_map =  INSERT INTO WORKFLOW_MAP( \
	      MAP_ID, \
	      DESCRIPTION, \
	      MAP_TYPE, \
	      UPDATE_TIMESTAMP, \
	      UNIT_NUMBER, \
	      UPDATE_USER, \
	      MAP_NAME \
	      ) \
	      VALUES( \
	      <<MAP_ID>>, \
	      <<DESCRIPTION>>, \
	      <<MAP_TYPE>>,\
	      <<UPDATE_TIMESTAMP>>, \
	      <<UNIT_NUMBER>>, \
	      <<UPDATE_USER>>, \
	      <<MAP_NAME>> \
	     )

insert_map_detail =  INSERT INTO WORKFLOW_MAP_DETAIL( \
		     MAP_DETAIL_ID, \
		     MAP_ID, \
		     APPROVAL_STOP_NUMBER, \
		     APPROVER_NUMBER, \
		     APPROVER_PERSON_ID, \
		     PRIMARY_APPROVER_FLAG, \
		     IS_ROLE, \
		     ROLE_TYPE_CODE, \
		     DESCRIPTION, \
	             UPDATE_TIMESTAMP, \
		     UPDATE_USER, \
		     STOP_NAME \
		     ) \
		     VALUES( \
		     <<MAP_DETAIL_ID>>, \
		     <<MAP_ID>>, \
		     <<APPROVAL_STOP_NUMBER>>, \
		     <<APPROVER_NUMBER>>,\
		     <<APPROVER_PERSON_ID>>, \
		     <<PRIMARY_APPROVER_FLAG>>, \
		     <<IS_ROLE>>,\
		     <<ROLE_TYPE_CODE>>, \
		     <<DESCRIPTION>>,\
		     <<UPDATE_TIMESTAMP>>, \
		     <<UPDATE_USER>>, \
		     <<STOP_NAME>> \
		     )

update_map_by_id =  UPDATE WORKFLOW_MAP SET DESCRIPTION = <<DESCRIPTION>>,\
		    MAP_TYPE = <<MAP_TYPE>>,\
		    UPDATE_TIMESTAMP = <<UPDATE_TIMESTAMP>>,\
	            UPDATE_USER = <<UPDATE_USER>>,\
		    UNIT_NUMBER = <<UNIT_NUMBER>>, \
		    MAP_NAME = <<MAP_NAME>> \
	            WHERE MAP_ID = <<MAP_ID>>

update_map_detail_by_id = UPDATE WORKFLOW_MAP_DETAIL SET APPROVAL_STOP_NUMBER = <<APPROVAL_STOP_NUMBER>>, \
			  APPROVER_NUMBER = <<APPROVER_NUMBER>>,\
			  APPROVER_PERSON_ID = <<APPROVER_PERSON_ID>>, \
			  PRIMARY_APPROVER_FLAG = <<PRIMARY_APPROVER_FLAG>>, \
			  IS_ROLE = <<IS_ROLE>>,\
			  ROLE_TYPE_CODE = <<ROLE_TYPE_CODE>>, \
			  DESCRIPTION = <<DESCRIPTION>>,\
			  UPDATE_TIMESTAMP = <<UPDATE_TIMESTAMP>>, \
			  UPDATE_USER = <<UPDATE_USER>>, \
			  STOP_NAME = <<STOP_NAME>> \
			  WHERE MAP_DETAIL_ID = <<MAP_DETAIL_ID>> AND MAP_ID = <<MAP_ID>>

get_all_units = SELECT UNIT_NUMBER,UNIT_NAME FROM UNIT

get_is_map_used = SELECT SUM(T.COUNT) COUNT FROM ((SELECT COUNT(MAP_ID) AS COUNT,MAP_ID FROM WORKFLOW_DETAIL WHERE MAP_ID = <<MAP_ID>>) \
								 UNION  \
								 (SELECT COUNT(MAP_ID) AS COUNT,MAP_ID FROM GRANT_CALL_EVALUATION_PANEL WHERE MAP_ID = <<MAP_ID>>) \
                                 UNION \
                                 (SELECT COUNT(MAP_ID) AS COUNT,MAP_ID FROM BUSINESS_RULES WHERE MAP_ID = <<MAP_ID>>) \
                                 UNION \
                                 (SELECT COUNT(MAP_ID) AS COUNT,MAP_ID FROM EPS_PROPOSAL_EVALUATION_PANEL WHERE MAP_ID = <<MAP_ID>>) \
								 ) AS T 

get_variable_lookup_details = SELECT T2.TABLE_NAME,T2.COLUMN_NAME,T2.OTHERS_DISPLAY_COLUMNS, T1.DESCRIPTION \
							FROM BUSINESS_RULE_VARIABLE T1  \
							INNER JOIN LOOKUP_WINDOW T2 ON T1.LOOKUP_WINDOW_NAME = T2.LOOKUP_WINDOW_NAME \
							WHERE T1.VARIABLE_NAME = <<VARIABLE_NAME>>
							
get_business_rule_for_questionnaire = SELECT RULE_ID,DESCRIPTION AS RULE \
									  FROM BUSINESS_RULES \
									  WHERE RULE_TYPE = 'Q' \
									  AND IS_ACTIVE = 'Y' \
									  AND MODULE_CODE = <<MODULE_CODE>> \
									  AND SUB_MODULE_CODE = <<SUB_MODULE_CODE>> ORDER BY DESCRIPTION ASC
									  
get_business_rules_for_questionnaire = SELECT RULE_ID,DESCRIPTION AS RULE, IS_ACTIVE \
									  FROM BUSINESS_RULES \
									  WHERE RULE_TYPE = 'Q' 

get_medusa_award_from_nego= SELECT ASSOCIATED_PROJECT_ID FROM NEGOTIATION_ASSOCIATION WHERE NEGOTIATION_ID= <<NEGOTIATION_ID>> AND ASSOCIATION_TYPE_CODE = '1' 

get_medusa_award_from_ip=SELECT T1.AWARD_NUMBER FROM AWARD T1  \
						 INNER JOIN AWARD_FUNDING_PROPOSALS T2 ON T1.AWARD_ID = T2.AWARD_ID \
						 WHERE T2.PROPOSAL_ID IN (SELECT PROPOSAL_ID FROM PROPOSAL WHERE PROPOSAL_NUMBER = <<PROPOSAL_NUMBER>> ) AND T1.AWARD_SEQUENCE_STATUS ="ACTIVE" 
						 
get_medusa_award_from_pd=SELECT DISTINCT T1.AWARD_NUMBER \
						 FROM AWARD T1  \
						 INNER JOIN AWARD_FUNDING_PROPOSALS T2 ON T1.AWARD_ID = T2.AWARD_ID \
						 INNER JOIN PROPOSAL_ADMIN_DETAILS T3 ON T3.INST_PROPOSAL_ID = T2.PROPOSAL_ID \
						 INNER JOIN EPS_PROPOSAL T4 ON T4.PROPOSAL_ID  = T3.DEV_PROPOSAL_ID \
						 WHERE T4.PROPOSAL_ID = <<PROPOSAL_ID>>						 
						 
get_medusa_ip_from_nego = SELECT T1.ASSOCIATED_PROJECT_ID , T2.PROPOSAL_NUMBER \
						FROM NEGOTIATION_ASSOCIATION  T1 \
						INNER JOIN PROPOSAL T2 ON T2.PROPOSAL_NUMBER = T1.ASSOCIATED_PROJECT_ID \
						WHERE T1.NEGOTIATION_ID= <<NEGOTIATION_ID>>  \
						AND ASSOCIATION_TYPE_CODE = '2' 

get_medusa_ip_from_award=	SELECT DISTINCT T2.PROPOSAL_ID,T3.PROPOSAL_NUMBER FROM AWARD T1   \
							INNER JOIN AWARD_FUNDING_PROPOSALS T2 ON T1.AWARD_ID = T2.AWARD_ID    \
							INNER JOIN PROPOSAL T3 ON T3.PROPOSAL_ID = T2.PROPOSAL_ID   \
							WHERE T1.AWARD_NUMBER = <<AWARD_NUMBER>>    \
							AND T1.AWARD_SEQUENCE_STATUS = 'ACTIVE'
						 
get_medusa_ip_from_pd=  SELECT T1.INST_PROPOSAL_ID AS PROPOSAL_ID ,T2.PROPOSAL_NUMBER \
						FROM PROPOSAL_ADMIN_DETAILS T1  \
						INNER JOIN PROPOSAL T2 ON T2.PROPOSAL_ID = T1.INST_PROPOSAL_ID AND PROPOSAL_SEQUENCE_STATUS = 'ACTIVE' \
						WHERE T1.DEV_PROPOSAL_ID = <<PROPOSAL_ID>>

get_medusa_ip_number_ip_id=SELECT PROPOSAL_NUMBER FROM PROPOSAL WHERE PROPOSAL_ID= <<PROPOSAL_ID>>	

						 
get_medusa_pd_from_ip=SELECT DISTINCT DEV_PROPOSAL_ID AS DEV_PROPOSAL_NUMBER FROM PROPOSAL_ADMIN_DETAILS WHERE INST_PROPOSAL_ID IN \
                       (SELECT PROPOSAL_ID FROM PROPOSAL WHERE PROPOSAL_SEQUENCE_STATUS IN ("ACTIVE","PENDING") AND PROPOSAL_NUMBER = <<PROPOSAL_NUMBER>> )	

get_medusa_pd_from_award=SELECT DISTINCT T4.PROPOSAL_ID \
						 FROM AWARD T1  \
						 INNER JOIN AWARD_FUNDING_PROPOSALS T2 ON T1.AWARD_ID = T2.AWARD_ID \
						 INNER JOIN PROPOSAL_ADMIN_DETAILS T3 ON T3.INST_PROPOSAL_ID = T2.PROPOSAL_ID \
						 INNER JOIN EPS_PROPOSAL T4 ON T4.PROPOSAL_ID  = T3.DEV_PROPOSAL_ID \
						 WHERE AND T1.AWARD_NUMBER = <<AWARD_NUMBER>> AND T1.AWARD_SEQUENCE_STATUS = 'ACTIVE'

get_medusa_nego_from_pd= SELECT T1.NEGOTIATION_ID FROM NEGOTIATION_ASSOCIATION T1 \
						  INNER JOIN PROPOSAL_ADMIN_DETAILS T2 ON T1.ASSOCIATED_PROJECT_ID = T2.INST_PROPOSAL_ID \
						  INNER JOIN EPS_PROPOSAL T3 ON T3.PROPOSAL_ID = T2.DEV_PROPOSAL_ID	\			  
						  WHERE T3.PROPOSAL_ID=<<PROPOSAL_ID>> \
						  AND T1.ASSOCIATION_TYPE_CODE = '2' 
						  						  
get_medusa_grant_from_ip= SELECT T2.GRANT_HEADER_ID FROM PROPOSAL_ADMIN_DETAILS T1 \
						 INNER JOIN EPS_PROPOSAL T2 ON T1.DEV_PROPOSAL_ID = T2.PROPOSAL_ID \
						 WHERE T1.INST_PROPOSAL_ID	= <<PROPOSAL_ID>>
						  
get_medusa_nego_from_ip= SELECT NEGOTIATION_ID FROM NEGOTIATION_ASSOCIATION WHERE  ASSOCIATED_PROJECT_ID= <<ASSOCIATED_PROJECT_ID>> AND ASSOCIATION_TYPE_CODE = '2' 

get_medusa_nego_from_award=SELECT NEGOTIATION_ID FROM NEGOTIATION_ASSOCIATION WHERE  ASSOCIATED_PROJECT_ID= <<ASSOCIATED_PROJECT_ID>> AND ASSOCIATION_TYPE_CODE = '1' 
						 
get_medusa_grant_from_pd=SELECT GRANT_HEADER_ID FROM EPS_PROPOSAL WHERE PROPOSAL_ID= <<PROPOSAL_ID>>	

get_nego_association= SELECT ASSOCIATION_TYPE_CODE FROM NEGOTIATION_ASSOCIATION WHERE NEGOTIATION_ID= <<NEGOTIATION_ID>>

get_answered_questionnaire=SELECT T2.QUESTIONNAIRE_ID, \
								  T2.QUESTIONNAIRE_NUMBER, \
								  T3.QUESTIONNAIRE_ANS_HEADER_ID, \
								  T3.QUESTIONNAIRE_COMPLETED_FLAG, \
								  T2.QUESTIONNAIRE, \
								  T1.QUESTIONNAIRE_LABEL, \
								  T3.QUESTIONNAIRE_COMPLETED_FLAG, \
								  T2.VERSION_NUMBER FROM QUEST_USAGE T1  \
							INNER JOIN QUEST_HEADER T2 ON T1.QUESTIONNAIRE_ID = T2.QUESTIONNAIRE_ID  \
							INNER JOIN QUEST_ANSWER_HEADER T3 ON T1.QUESTIONNAIRE_ID = T3.QUESTIONNAIRE_ID  \
							          AND T1.MODULE_ITEM_CODE = T3.MODULE_ITEM_CODE \
							          AND T1.MODULE_SUB_ITEM_CODE = T3.MODULE_SUB_ITEM_CODE \
							          AND T3.MODULE_ITEM_KEY = <<MODULE_ITEM_KEY>> \
							          AND T3.MODULE_SUB_ITEM_KEY = <<MODULE_SUB_ITEM_KEY>> \
							          WHERE T3.MODULE_ITEM_CODE = <<MODULE_ITEM_CODE>> AND T3.MODULE_SUB_ITEM_CODE = <<MODULE_SUB_ITEM_CODE>> \
							          ORDER BY T2.QUESTIONNAIRE_NUMBER, T2.VERSION_NUMBER DESC

					          	
activate_deactivate_questionnaire=UPDATE QUEST_HEADER SET IS_FINAL = <<IS_FINAL>>, \
									UPDATE_USER = <<UPDATE_USER>>, \
									UPDATE_TIMESTAMP = <<UPDATE_TIMESTAMP>> \
							     	WHERE QUESTIONNAIRE_ID = <<QUESTIONNAIRE_ID>>

get_role_description_by_module_code = SELECT T1.ROLE_TYPE_CODE, T2.DESCRIPTION FROM PERSON_ROLE_MODULE T1 \
									LEFT OUTER JOIN PERSON_ROLE_TYPE T2 ON T1.ROLE_TYPE_CODE = T2.ROLE_TYPE_CODE \
									WHERE T1.MODULE_CODE = <<MODULE_CODE>> AND T1.SUB_MODULE_CODE = <<SUB_MODULE_CODE>>

get_user_notification_type = SELECT T4.DESCRIPTION AS MODULE_DESCRIPTION,T1.MODULE_CODE,T1.NOTIFICATION_TYPE_ID,T1.IS_SYSTEM_SPECIFIC,T1.DESCRIPTION, \
                            T3.PREFERENCE_ID,IF(T3.PREFERENCE_ID IS NULL,'1','0') AS IS_SENT FROM NOTIFICATION_TYPE T1 \
                            LEFT OUTER JOIN (SELECT T2.PERSON_ID,T2.PREFERENCES_TYPE_CODE,T2.VALUE,T2.PREFERENCE_ID  \
			             	FROM  PERSON_PREFERENCE T2   WHERE T2.PERSON_ID = <<PERSON_ID>>)T3 ON T1.NOTIFICATION_TYPE_ID = T3.VALUE \
                            LEFT OUTER JOIN  COEUS_MODULE T4 ON T4.MODULE_CODE = T1.MODULE_CODE WHERE T1.IS_SYSTEM_SPECIFIC='N' AND T4.IS_ACTIVE='Y'

get_workflow_detail_id = SELECT T2.WORKFLOW_DETAIL_ID, IFNULL(T3.CAN_SCORE,'N') AS CAN_SCORE \
						 FROM WORKFLOW T1 LEFT  JOIN WORKFLOW_DETAIL T2 ON T1.WORKFLOW_ID = T2.WORKFLOW_ID \
						 LEFT JOIN EPS_PROPOSAL_EVALUATION_PANEL T3 ON T3.MAP_ID = T2.MAP_ID AND T3.PROPOSAL_ID = <<PROPOSAL_ID>> \
						 WHERE T1.MODULE_ITEM_ID = <<PROPOSAL_ID>> \
						 AND T1.IS_WORKFLOW_ACTIVE = 'Y' \
						 AND T2.APPROVAL_STATUS = 'W' \
						 AND T2.APPROVER_PERSON_ID = <<APPROVER_PERSON_ID>> \
						 AND T1.MODULE_CODE= 3 ORDER BY T2.WORKFLOW_DETAIL_ID


get_all_business_rule = SELECT  \
                   T1.RULE_ID ,  \
                   T1.DESCRIPTION ,  \
                   T1.RULE_TYPE,  \
                   T1.RULE_CATEGORY, \
                   T2.UNIT_NAME, \
                   T1.UNIT_NUMBER,  \
                   T3.DESCRIPTION AS MODULE_NAME,  \
                   T1.MODULE_CODE,  \
                   T1.SUB_MODULE_CODE,  \
                   T1.IS_ACTIVE,  \
                   T1.UPDATE_TIMESTAMP,  \
                   T1.UPDATE_USER,  \
                   T1.RULE_EXPRESSION,  \
                   T1.MAP_ID, \
                   T4.DESCRIPTION AS MAP_NAME,\
                   T1.NOTIFICATION_ID, \
                   T1.USER_MESSAGE,  \
                   T1.RULE_EVALUATION_ORDER, \
                   IFNULL(T5.DESCRIPTION,T6.DESCRIPTION) AS RULE_APPLIED_TO \
                   FROM BUSINESS_RULES T1 \
                   LEFT OUTER JOIN UNIT T2 ON T1.UNIT_NUMBER = T2.UNIT_NUMBER \
                   LEFT OUTER JOIN COEUS_MODULE T3 ON T1.MODULE_CODE = T3.MODULE_CODE \
                   LEFT OUTER JOIN COEUS_SUB_MODULE T5 ON T1.MODULE_CODE = T5.MODULE_CODE  \
                   AND T1.SUB_MODULE_CODE = T5.SUB_MODULE_CODE \
                   LEFT OUTER JOIN COEUS_MODULE T6 ON T1.MODULE_CODE = T6.MODULE_CODE \
                   LEFT OUTER JOIN WORKFLOW_MAP T4 ON T1.MAP_ID= T4.MAP_ID

get_max_questionnaire_sort_order = SELECT MAX(SORT_ORDER) MAX_SORT_ORDER FROM QUEST_USAGE WHERE MODULE_ITEM_CODE = <<MODULE_ITEM_CODE>> AND MODULE_SUB_ITEM_CODE = <<MODULE_SUB_ITEM_CODE>>

update_questionnaire_usage_for_sort = UPDATE QUEST_USAGE SET SORT_ORDER = <<SORT_ORDER>> \
                                       WHERE QUESTIONNAIRE_ID IN (SELECT QUESTIONNAIRE_ID FROM QUEST_HEADER WHERE QUESTIONNAIRE_NUMBER = <<QUESTIONNAIRE_NUMBER>>) \
                                       AND MODULE_ITEM_CODE = <<MODULE_ITEM_CODE>> \
                                       AND MODULE_SUB_ITEM_CODE = <<MODULE_SUB_ITEM_CODE>>

get_all_questionnaire = SELECT ACTIVE_QUESTIONNAIRE_VERSION, \
							PENDING_QUESTIONNAIRE_VERSION, \
							ACTIVE_ANSWERED_COUNT, \
							PENDING_ANSWERED_COUNT, \
							ACTIVE_QUESTIONNAIRE_ID, \
							PENDING_QUESTIONNAIRE_ID, \
							(CASE WHEN ACTIVE_QUESTIONNAIRE_ID is not null THEN 'Y' else 'N' END) AS IS_FINAL, \
							QUESTIONNAIRE_NUMBER, \
							QUESTIONNAIRE_LABEL, \
							UPDATE_USER, \
							UPDATE_TIMESTAMP \
							FROM \
							(SELECT \
							GROUP_CONCAT(IFNULL(ACTIVE_QUESTIONNAIRE_ID,null) SEPARATOR "") AS ACTIVE_QUESTIONNAIRE_ID, \
							GROUP_CONCAT(IFNULL(PENDING_QUESTIONNAIRE_ID,null) SEPARATOR "") AS PENDING_QUESTIONNAIRE_ID, \
							GROUP_CONCAT(IFNULL(ACTIVE_QUESTIONNAIRE_VERSION,null) SEPARATOR "") AS ACTIVE_QUESTIONNAIRE_VERSION, \
							GROUP_CONCAT(IFNULL(PENDING_QUESTIONNAIRE_VERSION,null) SEPARATOR "") AS PENDING_QUESTIONNAIRE_VERSION, \
							GROUP_CONCAT(IFNULL(ACTIVE_ANSWERED_COUNT,null) SEPARATOR "") AS ACTIVE_ANSWERED_COUNT, \
							GROUP_CONCAT(IFNULL(PENDING_ANSWERED_COUNT,null) SEPARATOR "") AS PENDING_ANSWERED_COUNT, \
							(CASE WHEN (ACTIVE_QUESTIONNAIRE_ID is not null and PENDING_QUESTIONNAIRE_ID is null )THEN 'Y' else 'N' END) AS IS_FINAL, \
							QUESTIONNAIRE_NUMBER, \
							QUESTIONNAIRE_LABEL, \
							UPDATE_USER, \
							UPDATE_TIMESTAMP \
							FROM(SELECT \
							(CASE WHEN IS_ACTIVE = 'Y' THEN `QUESTIONNAIRE_ID` END) AS 'ACTIVE_QUESTIONNAIRE_ID', \
							(CASE WHEN IS_ACTIVE = 'N' THEN `QUESTIONNAIRE_ID` END) AS 'PENDING_QUESTIONNAIRE_ID', \
							(CASE WHEN IS_ACTIVE = 'Y' THEN `QUESTIONNAIRE_VERSION` END) AS 'ACTIVE_QUESTIONNAIRE_VERSION', \
							(CASE WHEN IS_ACTIVE = 'N' THEN `QUESTIONNAIRE_VERSION` END) AS 'PENDING_QUESTIONNAIRE_VERSION', \
							(CASE WHEN IS_ACTIVE = 'Y' THEN `ANSWERED_COUNT` END) AS 'ACTIVE_ANSWERED_COUNT', \
							(CASE WHEN IS_ACTIVE = 'N' THEN `ANSWERED_COUNT` END) AS 'PENDING_ANSWERED_COUNT', \
							QUESTIONNAIRE_NUMBER, \
							QUESTIONNAIRE_LABEL, \
							UPDATE_USER, \
							UPDATE_TIMESTAMP \
							FROM \
							(SELECT t1.QUESTIONNAIRE_ID, \
							t1.QUESTIONNAIRE_NUMBER, \
							t1.VERSION_NUMBER AS QUESTIONNAIRE_VERSION, \
							t1.QUESTIONNAIRE AS QUESTIONNAIRE_LABEL, \
							t1.IS_FINAL AS IS_ACTIVE, \
							t1.QUEST_GROUP_TYPE_CODE, \
							P.FULL_NAME AS UPDATE_USER, \
							t1.UPDATE_TIMESTAMP, \
							(SELECT COUNT(t2.QUESTIONNAIRE_ANS_HEADER_ID) FROM QUEST_ANSWER_HEADER t2 WHERE t2.QUESTIONNAIRE_ID = t1.QUESTIONNAIRE_ID) AS ANSWERED_COUNT \
							FROM QUEST_HEADER t1 \
							LEFT JOIN PERSON P ON P.USER_NAME = t1.UPDATE_USER \
							WHERE t1.VERSION_NUMBER IN (SELECT MAX(S1.VERSION_NUMBER) FROM QUEST_HEADER S1 WHERE S1.QUESTIONNAIRE_NUMBER = t1.QUESTIONNAIRE_NUMBER AND t1.IS_FINAL = 'N') \
							OR t1.IS_FINAL = 'Y' \
							ORDER BY t1.UPDATE_TIMESTAMP DESC) B )C \
							GROUP BY QUESTIONNAIRE_NUMBER) D

deactivate_questionnaire = UPDATE QUEST_HEADER SET IS_FINAL = 'N' \
							     WHERE QUESTIONNAIRE_NUMBER = <<QUESTIONNAIRE_NUMBER>> \
							     AND QUESTIONNAIRE_ID <> <<QUESTIONNAIRE_ID>>

get_all_questionnaire_by_module = SELECT ACTIVE_QUESTIONNAIRE_VERSION, \
								PENDING_QUESTIONNAIRE_VERSION, \
								ACTIVE_ANSWERED_COUNT, \
								PENDING_ANSWERED_COUNT, \
								ACTIVE_QUESTIONNAIRE_ID, \
								PENDING_QUESTIONNAIRE_ID, \
								(CASE WHEN ACTIVE_QUESTIONNAIRE_ID is not null THEN 'Y' else 'N' END) AS IS_FINAL, \
								QUESTIONNAIRE_NUMBER, \
								QUESTIONNAIRE_LABEL, \
								UPDATE_USER, \
								UPDATE_TIMESTAMP, \
								SORT_ORDER \
								FROM \
								(SELECT \
								GROUP_CONCAT(IFNULL(ACTIVE_QUESTIONNAIRE_ID,null) SEPARATOR "") AS ACTIVE_QUESTIONNAIRE_ID, \
								GROUP_CONCAT(IFNULL(PENDING_QUESTIONNAIRE_ID,null) SEPARATOR "") AS PENDING_QUESTIONNAIRE_ID, \
								GROUP_CONCAT(IFNULL(ACTIVE_QUESTIONNAIRE_VERSION,null) SEPARATOR "") AS ACTIVE_QUESTIONNAIRE_VERSION, \
								GROUP_CONCAT(IFNULL(PENDING_QUESTIONNAIRE_VERSION,null) SEPARATOR "") AS PENDING_QUESTIONNAIRE_VERSION, \
								GROUP_CONCAT(IFNULL(ACTIVE_ANSWERED_COUNT,null) SEPARATOR "") AS ACTIVE_ANSWERED_COUNT, \
								GROUP_CONCAT(IFNULL(PENDING_ANSWERED_COUNT,null) SEPARATOR "") AS PENDING_ANSWERED_COUNT, \
								(CASE WHEN (ACTIVE_QUESTIONNAIRE_ID is not null and PENDING_QUESTIONNAIRE_ID is null )THEN 'Y' else 'N' END) AS IS_FINAL,\
								QUESTIONNAIRE_NUMBER, \
								QUESTIONNAIRE_LABEL, \
								UPDATE_USER, \
								UPDATE_TIMESTAMP, \
								SORT_ORDER \
								FROM(SELECT \
								(CASE WHEN IS_ACTIVE = 'Y' THEN `QUESTIONNAIRE_ID` END) AS 'ACTIVE_QUESTIONNAIRE_ID', \
								(CASE WHEN IS_ACTIVE = 'N' THEN `QUESTIONNAIRE_ID` END) AS 'PENDING_QUESTIONNAIRE_ID', \
								(CASE WHEN IS_ACTIVE = 'Y' THEN `QUESTIONNAIRE_VERSION` END) AS 'ACTIVE_QUESTIONNAIRE_VERSION', \
								(CASE WHEN IS_ACTIVE = 'N' THEN `QUESTIONNAIRE_VERSION` END) AS 'PENDING_QUESTIONNAIRE_VERSION', \
								(CASE WHEN IS_ACTIVE = 'Y' THEN `ANSWERED_COUNT` END) AS 'ACTIVE_ANSWERED_COUNT', \
								(CASE WHEN IS_ACTIVE = 'N' THEN `ANSWERED_COUNT` END) AS 'PENDING_ANSWERED_COUNT', \
								QUESTIONNAIRE_NUMBER, \
								QUESTIONNAIRE_LABEL, \
								UPDATE_USER, \
								UPDATE_TIMESTAMP, \
								SORT_ORDER \
								FROM \
								(SELECT DISTINCT t1.QUESTIONNAIRE_ID, \
								t1.QUESTIONNAIRE_NUMBER, \
								t1.VERSION_NUMBER AS QUESTIONNAIRE_VERSION, \
								t1.QUESTIONNAIRE AS QUESTIONNAIRE_LABEL, \
								t1.IS_FINAL AS IS_ACTIVE, \
								t1.QUEST_GROUP_TYPE_CODE, \
								P.FULL_NAME AS UPDATE_USER, \
								t1.UPDATE_TIMESTAMP, \
								T3.SORT_ORDER, \
								(SELECT COUNT(t2.QUESTIONNAIRE_ANS_HEADER_ID) FROM QUEST_ANSWER_HEADER t2 WHERE t2.QUESTIONNAIRE_ID = t1.QUESTIONNAIRE_ID) AS ANSWERED_COUNT \
								FROM QUEST_HEADER t1 \
								LEFT JOIN PERSON P ON P.USER_NAME = t1.UPDATE_USER \
	                            INNER JOIN QUEST_USAGE T3 ON t1.QUESTIONNAIRE_ID = T3.QUESTIONNAIRE_ID \
								WHERE  T3.MODULE_ITEM_CODE = <<MODULE_ITEM_CODE>> AND T3.MODULE_SUB_ITEM_CODE = <<MODULE_SUB_ITEM_CODE>> \
                                AND t1.VERSION_NUMBER IN (SELECT MAX(S1.VERSION_NUMBER) FROM QUEST_HEADER S1 \
                                WHERE S1.QUESTIONNAIRE_NUMBER = t1.QUESTIONNAIRE_NUMBER AND t1.IS_FINAL = 'N') \
								OR( t1.IS_FINAL = 'Y' AND  T3.MODULE_ITEM_CODE = <<MODULE_ITEM_CODE>> AND T3.MODULE_SUB_ITEM_CODE = <<MODULE_SUB_ITEM_CODE>> \
	                             ) \
								) B )C \
								GROUP BY QUESTIONNAIRE_NUMBER \
								ORDER BY SORT_ORDER) D 

get_all_feed_id = SELECT FEED_STATUS FROM SAP_FEED_TMPL_FUNDED_PRGM S1 WHERE S1.FEED_ID = <<FEED_ID>> \
					AND S1.BATCH_ID = <<BATCH_ID>> \
					UNION SELECT FEED_STATUS FROM SAP_FEED_TMPL_WBS  S2 WHERE S2.FEED_ID = <<FEED_ID>> \
					 AND S2.BATCH_ID = <<BATCH_ID>> \
					UNION SELECT FEED_STATUS FROM SAP_FEED_TMPL_SPONSOR_CLASS S3 WHERE S3.FEED_ID = <<FEED_ID>> \
					 AND S3.BATCH_ID = <<BATCH_ID>> \
					UNION SELECT FEED_STATUS FROM SAP_FEED_TMPL_SPONSOR_PRGM S4 WHERE S4.FEED_ID = <<FEED_ID>> \
					 AND S4.BATCH_ID = <<BATCH_ID>> \
					UNION SELECT FEED_STATUS FROM SAP_FEED_TMPL_FM_BUDGET  S5 WHERE S5.FEED_ID = <<FEED_ID>> \
					 AND S5.BATCH_ID = <<BATCH_ID>> \
					UNION SELECT FEED_STATUS FROM SAP_FEED_TMPL_GRANT_MASTER S6 WHERE S6.FEED_ID = <<FEED_ID>> \
					 AND S6.BATCH_ID = <<BATCH_ID>> \
					UNION SELECT FEED_STATUS FROM SAP_FEED_TMPL_PROJECT_DEF S7 WHERE S7.FEED_ID = <<FEED_ID>> \
					 AND S7.BATCH_ID = <<BATCH_ID>> \
					UNION SELECT FEED_STATUS FROM SAP_FEED_TMPL_GRANT_BUD_MASTER S8  WHERE S8.FEED_ID = <<FEED_ID>> \
					AND S8.BATCH_ID = <<BATCH_ID>> \
					UNION SELECT FEED_STATUS FROM SAP_FEED_TMPL_FM_DERIVATION S9  WHERE S9.FEED_ID = <<FEED_ID>> \
					AND S9.BATCH_ID = <<BATCH_ID>> \
					UNION SELECT FEED_STATUS FROM SAP_FEED_TMPL_GM_DERIVATION S10  WHERE S10.FEED_ID = <<FEED_ID>> \
					AND S10.BATCH_ID = <<BATCH_ID>>

get_sap_award_feed_count = SELECT \
							    COUNT(CASE WHEN BATCH_ID = <<BATCH_ID>> THEN 0 END) AS AWARDCOUNT, \
							    COUNT(CASE WHEN FEED_STATUS ='R' AND  BATCH_ID = <<BATCH_ID>> THEN 0 END) AS AWARDSUCCESS, \
							    COUNT(CASE WHEN FEED_STATUS ='E' AND  BATCH_ID = <<BATCH_ID>> THEN 0 END) AS AWARDERROR, \
							    COUNT(CASE WHEN FEED_STATUS ='F' AND  BATCH_ID = <<BATCH_ID>> THEN 0 END) AS AWARDPENDING,  \
							    COUNT(CASE WHEN FEED_STATUS ='P' AND  BATCH_ID = <<BATCH_ID>> THEN 0 END) AS AWARDPENDINGERROR  \
							    FROM SAP_AWARD_FEED

delete_quest_answer_attachment = DELETE FROM QUEST_ANSWER_ATTACHMENT WHERE QUESTIONNAIRE_ANSWER_ID IN (SELECT QUESTIONNAIRE_ANSWER_ID FROM QUEST_ANSWER WHERE QUESTION_ID = <<QUESTION_ID>> AND QUESTIONNAIRE_ANS_HEADER_ID = <<QUESTIONNAIRE_ANS_HEADER_ID>>)
get_all_questions_for_agreement = SELECT CONCAT('QN-', T4.QUESTION_NUMBER) AS QN_NUMBER, \
								T4.QUESTION FROM QUEST_QUESTION T4 \
								WHERE T4.QUESTIONNAIRE_ID IN( \
								SELECT T1.QUESTIONNAIRE_ID FROM QUEST_HEADER T1 \
								INNER JOIN QUEST_USAGE T3 ON T1.QUESTIONNAIRE_ID = T3.QUESTIONNAIRE_ID \
								WHERE T1.VERSION_NUMBER IN \
								(SELECT MAX(S1.VERSION_NUMBER) FROM QUEST_HEADER S1 WHERE S1.QUESTIONNAIRE_NUMBER = T1.QUESTIONNAIRE_NUMBER) \
								AND T3.MODULE_ITEM_CODE = <<MODULE_ITEM_CODE>> AND T3.MODULE_SUB_ITEM_CODE = <<MODULE_SUB_ITEM_CODE>>) 

get_agreement_view= SELECT * FROM AGREEMENT_V WHERE AGREEMENT_REQUEST_ID= <<AGREEMENT_REQUEST_ID>>

get_agreement_questionnaire = select T2.QUESTION_NUMBER, T1.ANSWER from  QUEST_ANSWER T1 \
					 inner join QUEST_QUESTION T2 ON T2.QUESTION_ID = T1.QUESTION_ID \
					 where QUESTIONNAIRE_ANS_HEADER_ID \
					 in(select QUESTIONNAIRE_ANS_HEADER_ID from QUEST_ANSWER_HEADER where MODULE_ITEM_CODE = 13 and MODULE_ITEM_KEY =<<AGREEMENT_REQUEST_ID>>)

get_all_budget_feed_id =  SELECT FEED_STATUS FROM SAP_FEED_TMPL_FM_BUDGET S1 WHERE S1.FEED_ID = <<FEED_ID>> \
					 AND S1.BATCH_ID = <<BATCH_ID>> \
					UNION SELECT FEED_STATUS FROM SAP_FEED_TMPL_GRANT_BUD_MASTER S2  WHERE S2.FEED_ID = <<FEED_ID>> \
					AND S2.BATCH_ID = <<BATCH_ID>> 
get_all_questions_for_agreement = SELECT CONCAT('QN-', T4.QUESTION_NUMBER) AS QN_NUMBER, \
								T4.QUESTION FROM QUEST_QUESTION T4 \
								WHERE T4.QUESTIONNAIRE_ID IN( \
								SELECT T1.QUESTIONNAIRE_ID FROM QUEST_HEADER T1 \
								INNER JOIN QUEST_USAGE T3 ON T1.QUESTIONNAIRE_ID = T3.QUESTIONNAIRE_ID \
								WHERE T1.VERSION_NUMBER IN \
								(SELECT MAX(S1.VERSION_NUMBER) FROM QUEST_HEADER S1 WHERE S1.QUESTIONNAIRE_NUMBER = T1.QUESTIONNAIRE_NUMBER) \
								AND T3.MODULE_ITEM_CODE = <<MODULE_ITEM_CODE>> AND T3.MODULE_SUB_ITEM_CODE = <<MODULE_SUB_ITEM_CODE>>) 

get_agreement_view= SELECT * FROM AGREEMENT_V WHERE AGREEMENT_REQUEST_ID= <<AGREEMENT_REQUEST_ID>>

get_agreement_questionnaire = select T2.QUESTION_NUMBER, T1.ANSWER from  QUEST_ANSWER T1 \
					 inner join QUEST_QUESTION T2 ON T2.QUESTION_ID = T1.QUESTION_ID \
					 where QUESTIONNAIRE_ANS_HEADER_ID \
					 in(select QUESTIONNAIRE_ANS_HEADER_ID from QUEST_ANSWER_HEADER where MODULE_ITEM_CODE = 13 and MODULE_ITEM_KEY =<<AGREEMENT_REQUEST_ID>>)

get_max_questionnaire_answer_table_id = SELECT QUESTIONNAIRE_ANSWER_TABLE_ID FROM QUEST_COLUMN_NEXTVALUE

update_max_questionnaire_answer_table_id = UPDATE QUEST_COLUMN_NEXTVALUE SET QUESTIONNAIRE_ANSWER_TABLE_ID = <<QUESTIONNAIRE_ANSWER_TABLE_ID>>

insert_questionnaire_table_answer = INSERT INTO  QUEST_TABLE_ANSWER (\
  									QUESTIONNAIRE_ANS_HEADER_ID, QUESTION_ID, ORDER_NUMBER, \
  									COLUMN_1, COLUMN_2, COLUMN_3, COLUMN_4, COLUMN_5, COLUMN_6, COLUMN_7, COLUMN_8, COLUMN_9, COLUMN_10, \
  									UPDATE_TIMESTAMP, UPDATE_USER) VALUES \
  									(<<QUESTIONNAIRE_ANS_HEADER_ID>>, <<QUESTION_ID>>, <<ORDER_NUMBER>>, \
  									<<COLUMN_1>>, <<COLUMN_2>>, <<COLUMN_3>>, <<COLUMN_4>>, <<COLUMN_5>>, <<COLUMN_6>>, <<COLUMN_7>>,\
  									<<COLUMN_8>>, <<COLUMN_9>>, <<COLUMN_10>>,\
  									<<UPDATE_TIMESTAMP>>, <<UPDATE_USER>>) 

update_questionnaire_table_answer = UPDATE QUEST_TABLE_ANSWER SET ORDER_NUMBER=<<ORDER_NUMBER>>, COLUMN_1=<<COLUMN_1>>, COLUMN_2=<<COLUMN_2>>, \
  									COLUMN_3=<<COLUMN_3>>, COLUMN_4=<<COLUMN_4>>, COLUMN_5=<<COLUMN_5>>, COLUMN_6=<<COLUMN_6>>, COLUMN_7=<<COLUMN_7>>, COLUMN_8=<<COLUMN_8>>, \
  									COLUMN_9=<<COLUMN_9>>, COLUMN_10=<<COLUMN_10>>, UPDATE_TIMESTAMP=<<UPDATE_TIMESTAMP>>, UPDATE_USER=<<UPDATE_USER>> \
  									WHERE QUEST_TABLE_ANSWER_ID=<<QUEST_TABLE_ANSWER_ID>>

delete_questionnaire_table_answer = DELETE FROM QUEST_TABLE_ANSWER WHERE QUEST_TABLE_ANSWER_ID=<<QUEST_TABLE_ANSWER_ID>>

get_questionnaire_table_answer = SELECT ans.QUEST_TABLE_ANSWER_ID, ans.QUESTIONNAIRE_ANS_HEADER_ID, \
								 ans.QUESTION_ID, ans.ORDER_NUMBER, ans.COLUMN_1, ans.COLUMN_2, ans.COLUMN_3, \
								 ans.COLUMN_4, ans.COLUMN_5, ans.COLUMN_6, ans.COLUMN_7, ans.COLUMN_8, \
								 ans.COLUMN_9, ans.COLUMN_10, que.QUESTION_NUMBER \
								 FROM QUEST_TABLE_ANSWER ans INNER JOIN QUEST_QUESTION que ON ans.QUESTION_ID = que.QUESTION_ID \
								 WHERE ans.QUESTIONNAIRE_ANS_HEADER_ID = <<AV_QNR_ANS_HEADER_ID>> ORDER BY ans.ORDER_NUMBER ASC

get_function_argument_details = SELECT ARGUMENT_LABEL,DESCRIPTION,LOOKUP_WINDOW_NAME,LOOKUP_TYPE,ARGUMENT_NAME FROM BUSINESS_RULE_FUNCTION_ARG \
								WHERE ARGUMENT_TYPE = 'U' AND FUNCTION_NAME = <<FUNCTION_NAME>>

get_max_rule_expression_arg_id=SELECT RULES_EXPERSSION_ARG_ID FROM WORKFLOW_COLUMN_NEXTVALUE

update_max_rule_expression_arg_id=UPDATE WORKFLOW_COLUMN_NEXTVALUE SET RULES_EXPERSSION_ARG_ID = <<RULES_EXPERSSION_ID>>

insert_business_rule_exp_args = INSERT INTO BUSINESS_RULE_EXP_ARGS ( \
								BUSINESS_RULE_EXP_ARGS_ID, \
								 RULE_ID, \
								 RULES_EXPERSSION_ID, \
								 FUNCTION_NAME, \
								 ARGUMENT_NAME, \
								 VALUE, \
								 DESCRIPTION, \
								 UPDATE_TIMESTAMP, \
								 UPDATE_USER) \
								 VALUES ( \
								  <<BUSINESS_RULE_EXP_ARGS_ID>>, \
								 <<RULE_ID>>, \
								 <<RULES_EXPERSSION_ID>>, \
								 <<FUNCTION_NAME>>, \
								 <<ARGUMENT_NAME>>, \
								 <<VALUE>>, \
								 <<DESCRIPTION>>, \
								 <<UPDATE_TIMESTAMP>>, \
								 <<UPDATE_USER>>)
 
 
 update_business_rule_exp_args = UPDATE BUSINESS_RULE_EXP_ARGS SET RULE_ID = <<RULE_ID>> , \
								 RULES_EXPERSSION_ID = <<RULES_EXPERSSION_ID>> , \
								 FUNCTION_NAME =  <<FUNCTION_NAME>>, \
								 ARGUMENT_NAME =  <<ARGUMENT_NAME>>, \
								 VALUE =  <<VALUE>>, \
								 DESCRIPTION = <<DESCRIPTION>>, \
								 UPDATE_TIMESTAMP =  <<UPDATE_TIMESTAMP>>, \
								 UPDATE_USER = <<UPDATE_USER>> \
								 WHERE BUSINESS_RULE_EXP_ARGS_ID =   <<BUSINESS_RULE_EXP_ARGS_ID>>

delete_rule_expression_args_by_rule_exp_id = 	DELETE FROM BUSINESS_RULE_EXP_ARGS WHERE RULES_EXPERSSION_ID = <<RULES_EXPERSSION_ID>>

delete_rule_expression_args_by_rule_exp_arg_id = DELETE FROM BUSINESS_RULE_EXP_ARGS WHERE BUSINESS_RULE_EXP_ARGS_ID = <<RULES_EXPERSSION_ARG_ID>>

get_latest_question_details_by_number = SELECT T1.QUESTION_NUMBER,\
									     T1.QUESTION_VERSION_NUMBER,\
									     T1.QUESTIONNAIRE_ID,\
									     T1.SORT_ORDER,\
									     T1.QUESTION,\
									     T1.DESCRIPTION,\
									     T1.PARENT_QUESTION_ID,\
									     T1.HELP_LINK,\
									     T1.ANSWER_TYPE,\
									     T1.ANSWER_LENGTH,\
									     T1.NO_OF_ANSWERS,\
									     T1.LOOKUP_TYPE,\
									     T1.LOOKUP_NAME,\
									     T1.LOOKUP_FIELD,\
									     T1.GROUP_NAME,\
									     T1.GROUP_LABEL,\
									     T1.HAS_CONDITION,\
									     T1.UPDATE_TIMESTAMP,\
									     T2.QUESTIONNAIRE, \
									     T2.QUESTIONNAIRE_NUMBER, \
									     T1.QUESTION_ID, \
									     T1.UPDATE_USER FROM QUEST_QUESTION T1 \
									     INNER JOIN QUEST_HEADER T2 ON T1.QUESTIONNAIRE_ID = T2.QUESTIONNAIRE_ID \
									     WHERE T1.QUESTION_ID = (SELECT MAX(QUESTION_ID) FROM QUEST_QUESTION WHERE QUESTION_NUMBER = <<QUESTION_NUMBER>>)

delete_rule_expression_by_rule_id = DELETE FROM BUSINESS_RULES_EXPERSSION WHERE RULE_ID = <<RULE_ID>> 

delete_rule_by_id = DELETE FROM BUSINESS_RULES WHERE RULE_ID = <<RULE_ID>> 

delete_rule_expression_argument_by_rule_id = DELETE FROM BUSINESS_RULE_EXP_ARGS WHERE RULE_ID = <<RULE_ID>>

get_quest_module_submodule_code=SELECT T1.MODULE_CODE,0 AS SUB_MODULE_CODE,T1.DESCRIPTION,T1.IS_ACTIVE \
							FROM COEUS_MODULE T1 \
							UNION \
							SELECT T1.MODULE_CODE,T2.SUB_MODULE_CODE,T2.DESCRIPTION,T2.IS_ACTIVE \
							FROM COEUS_MODULE T1 \
							INNER JOIN COEUS_SUB_MODULE T2 ON T1.MODULE_CODE = T2.MODULE_CODE \
							 UNION \
                            SELECT 13,CAST(T3.AGREEMENT_TYPE_CODE AS unsigned),T3.DESCRIPTION,T3.IS_ACTIVE \
							FROM AGREEMENT_TYPE T3 \
							UNION \
                            SELECT 20,CAST(T4.TYPE_CODE AS unsigned),T4.DESCRIPTION,T4.ACTIVE_FLAG \
							FROM SR_TYPE T4 ORDER BY DESCRIPTION ASC
get_table_answer_id = SELECT QUEST_TABLE_ANSWER_ID FROM QUEST_TABLE_ANSWER WHERE QUESTIONNAIRE_ANS_HEADER_ID = <<QUESTIONNAIRE_ANS_HEADER_ID>> AND QUESTION_ID = <<QUESTION_ID>>

get_question_options=SELECT T1.QUESTION_OPTION_ID,  \
									T1.QUESTION_ID,  \
									T1.OPTION_NUMBER,  \
									T1.OPTION_LABEL,  \
									T1.REQUIRE_EXPLANATION,  \
									T1.EXPLANTION_LABEL  \
									FROM   QUEST_QUESTION_OPTION T1  \
									WHERE  T1.QUESTION_ID = <<AV_QUESTION_ID>> \
									ORDER  BY T1.QUESTION_OPTION_ID,T1.OPTION_NUMBER

get_is_questionnaires_completed = SELECT COUNT(1) AS COUNT \
								 FROM QUEST_USAGE T1  \
							INNER JOIN QUEST_HEADER T2 ON T1.QUESTIONNAIRE_ID = T2.QUESTIONNAIRE_ID  \
							LEFT OUTER JOIN QUEST_ANSWER_HEADER T3 ON T1.QUESTIONNAIRE_ID = T3.QUESTIONNAIRE_ID  \
							          AND T1.MODULE_ITEM_CODE = T3.MODULE_ITEM_CODE \
							          AND T1.MODULE_SUB_ITEM_CODE = T3.MODULE_SUB_ITEM_CODE \
							          AND T3.MODULE_ITEM_KEY = <<MODULE_ITEM_KEY>> \
							          AND T3.MODULE_SUB_ITEM_KEY = <<MODULE_SUB_ITEM_KEY>> \
							WHERE T1.MODULE_ITEM_CODE = <<MODULE_ITEM_CODE>> \
							AND   T1.MODULE_SUB_ITEM_CODE = <<MODULE_SUB_ITEM_CODE>> \
							AND T2.IS_FINAL = 'Y' AND (T3.QUESTIONNAIRE_COMPLETED_FLAG IS NULL OR T3.QUESTIONNAIRE_COMPLETED_FLAG ='N')